{"version":3,"sources":["webpack://everflow/webpack/universalModuleDefinition","webpack://everflow/webpack/bootstrap","webpack://everflow/external \"vue-property-decorator\"","webpack://everflow/external \"vue\"","webpack://everflow/./node_modules/crypto-js/core.js","webpack://everflow/external \"localforage\"","webpack://everflow/external \"axios\"","webpack://everflow/external \"vue-router\"","webpack://everflow/external \"vue-i18n\"","webpack://everflow/./node_modules/crypto-js/enc-base64.js","webpack://everflow/./node_modules/crypto-js/md5.js","webpack://everflow/./node_modules/crypto-js/enc-utf8.js","webpack://everflow/./node_modules/crypto-js/evpkdf.js","webpack://everflow/external \"vuex\"","webpack://everflow/external \"vue-class-component\"","webpack://everflow/./node_modules/crypto-js/sha256.js","webpack://everflow/./node_modules/crypto-js/aes.js","webpack://everflow/external \"moment\"","webpack://everflow/(webpack)/buildin/global.js","webpack://everflow/./node_modules/crypto-browserify/index.js","webpack://everflow/external \"randombytes\"","webpack://everflow/external \"create-hash\"","webpack://everflow/external \"create-hmac\"","webpack://everflow/./node_modules/browserify-sign/algos.js","webpack://everflow/external \"pbkdf2\"","webpack://everflow/external \"browserify-cipher\"","webpack://everflow/external \"diffie-hellman\"","webpack://everflow/external \"browserify-sign\"","webpack://everflow/external \"create-ecdh\"","webpack://everflow/external \"public-encrypt\"","webpack://everflow/external \"randomfill\"","webpack://everflow/./node_modules/crypto-js/sha1.js","webpack://everflow/./node_modules/crypto-js/hmac.js","webpack://everflow/./node_modules/crypto-js/cipher-core.js","webpack://everflow/./everflow/plugin/everflow-plugin.ts","webpack://everflow/./everflow/utils/utils.ts","webpack://everflow/./everflow/utils/storage.ts","webpack://everflow/./everflow/errors/config-router-mode-error.ts","webpack://everflow/./everflow/errors/config-mount-error.ts","webpack://everflow/./everflow/errors/routes-empty-error.ts","webpack://everflow/./everflow/errors/request-endpoint-format-error.ts","webpack://everflow/./everflow/errors/request-baseurl-format-error.ts","webpack://everflow/./everflow/errors/request-prefix-format-error.ts","webpack://everflow/./everflow/errors/config-security-error.ts","webpack://everflow/./everflow/errors/config-security-key-error.ts","webpack://everflow/./everflow/errors/index.ts","webpack://everflow/./everflow/request.ts","webpack://everflow/./everflow/language.ts","webpack://everflow/./everflow/app.ts","webpack://everflow/./everflow/decorators/emit.ts","webpack://everflow/./everflow/decorators/inject.ts","webpack://everflow/./everflow/decorators/model.ts","webpack://everflow/./everflow/decorators/prop.ts","webpack://everflow/./everflow/decorators/provide.ts","webpack://everflow/./everflow/decorators/watch.ts","webpack://everflow/./everflow/decorators/index.ts","webpack://everflow/./everflow/page.ts","webpack://everflow/./everflow/ready.ts","webpack://everflow/./everflow/security.ts","webpack://everflow/./everflow/utils/date-time.ts","webpack://everflow/./everflow/utils/index.ts","webpack://everflow/./everflow/models/model.ts","webpack://everflow/./everflow/models/index.ts","webpack://everflow/./everflow/models/user-model.ts","webpack://everflow/./everflow/navigation-guards/index.ts","webpack://everflow/./everflow/navigation-guards/document-title.navguard.ts","webpack://everflow/./everflow.ts"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","require","CryptoJS","Math","undefined","crypto","msCrypto","global","err","cryptoSecureRandomInt","getRandomValues","Uint32Array","randomBytes","readInt32LE","Error","F","obj","subtype","C","C_lib","lib","Base","extend","overrides","this","mixIn","init","$super","apply","arguments","instance","properties","propertyName","toString","clone","WordArray","words","sigBytes","length","encoder","Hex","stringify","concat","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","ceil","slice","random","nBytes","push","C_enc","enc","hexChars","bite","join","parse","hexStr","hexStrLength","parseInt","substr","Latin1","latin1Chars","String","fromCharCode","latin1Str","latin1StrLength","charCodeAt","Utf8","decodeURIComponent","escape","e","utf8Str","unescape","encodeURIComponent","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","data","_process","doFlush","processedWords","dataWords","dataSigBytes","blockSize","blockSizeBytes","nBlocksReady","max","_minBufferSize","nWordsReady","nBytesReady","min","offset","_doProcessBlock","splice","C_algo","Hasher","cfg","_doReset","update","messageUpdate","finalize","hash","_doFinalize","_createHelper","hasher","message","_createHmacHelper","HMAC","algo","Base64","map","_map","base64Chars","byte1","byte2","byte3","triplet","j","charAt","paddingChar","base64Str","base64StrLength","reverseMap","_reverseMap","paddingIndex","indexOf","parseLoop","bits1","bits2","bitsCombined","T","abs","sin","MD5","_hash","M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","a","b","FF","GG","HH","II","nBitsTotal","nBitsLeft","nBitsTotalH","floor","nBitsTotalL","H_i","x","HmacMD5","EvpKDF","keySize","iterations","compute","password","salt","block","derivedKey","derivedKeyWords","K","isPrime","sqrtN","sqrt","factor","getFractionalBits","nPrime","pow","W","SHA256","f","g","h","gamma0x","gamma0","gamma1x","gamma1","ch","maj","sigma0","sigma1","t1","t2","HmacSHA256","BlockCipher","SBOX","INV_SBOX","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","INV_SUB_MIX_0","INV_SUB_MIX_1","INV_SUB_MIX_2","INV_SUB_MIX_3","xi","sx","x2","x4","x8","RCON","AES","_nRounds","_keyPriorReset","_key","keyWords","nRounds","ksRows","keySchedule","_keySchedule","ksRow","invKeySchedule","_invKeySchedule","invKsRow","encryptBlock","_doCryptBlock","decryptBlock","s0","s1","s2","s3","round","t0","t3","Function","rng","pseudoRandomBytes","prng","createHash","Hash","createHmac","Hmac","algos","algoKeys","keys","hashes","getHashes","pbkdf2","pbkdf2Sync","aes","Cipher","createCipher","Cipheriv","createCipheriv","Decipher","createDecipher","Decipheriv","createDecipheriv","getCiphers","listCiphers","dh","DiffieHellmanGroup","createDiffieHellmanGroup","getDiffieHellman","createDiffieHellman","DiffieHellman","sign","createSign","Sign","createVerify","Verify","createECDH","publicEncrypt","privateEncrypt","publicDecrypt","privateDecrypt","rf","randomFill","randomFillSync","createCredentials","constants","SHA1","HmacSHA1","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","hmac","createEncryptor","_ENC_XFORM_MODE","createDecryptor","_DEC_XFORM_MODE","xformMode","_xformMode","process","dataUpdate","finalProcessedData","ivSize","selectCipherStrategy","PasswordBasedCipher","SerializableCipher","cipher","encrypt","decrypt","ciphertext","C_mode","StreamCipher","finalProcessedBlocks","BlockCipherMode","iv","Encryptor","Decryptor","_cipher","_iv","CBC","processBlock","xorBlock","_prevBlock","thisBlock","C_pad","pad","Pkcs7","nPaddingBytes","paddingWord","paddingWords","padding","unpad","CipherParams","modeCreator","_mode","__creator","cipherParams","formatter","C_format","format","OpenSSLFormatter","OpenSSL","openSSLStr","ciphertextWords","encryptor","cipherCfg","algorithm","_parse","plaintext","C_kdf","kdf","OpenSSLKdf","execute","derivedParams","Everflow","Vue","options","$app","everflowApp","EverflowPluginOptions","utils","online","navigator","onLine","removeHtml","replace","unixtime_ms","Date","getTime","sec","tagTester","isFunction","startsWith","string","target","position","config","defaultEverflowStorageConfig","driver","storeName","size","newConfig","onSuccess","onFail","then","catch","callback","ConfigRouterModeError","super","ConfigMountError","RoutesEmptyError","RequestEndPointFormatError","RequestBaseurlFormatError","RequestPrefixFormatError","ConfigSecurityKeyError","ConfigSecurityError","baseURL","url","authorize","bearerToken","endPoint","responseType","headers","retries","maxTime","disableAllButtons","everflowAPIURL","requests","all","spread","auth","miliseconds","method","build","addHeader","toLowerCase","end","endsWith","errors","timeout","JSON","ax","iRetryFunction","error","errorCode","response","status","request","Promise","reject","interceptors","use","disableAllButtonsFunction","disabled","buttons","document","querySelectorAll","len","app","messages","locale","i18nName","loadLanguageAsync","i18n","defaultLocale","fallbackLocale","language","split","lang","defaults","common","querySelector","htmlLang","setAttribute","resolve","loadedLanguages","includes","setLocale","setLocaleMessage","appOptions","ready","readyPermission","readyCallbacks","$globals","requestErrorHandlers","routerOptions","vuePlugins","storage","__routerInit","routes","defaultI18nMessages","forEach","plugin","index","arr","routerMode","everflowDefaultRouterOptions","routerOptionsMerged","$router","store","injects","apiURL","mountId","vueOptions","router","assign","vueOptionsMerged","$mount","loadReadyCallbacks","params","Component","Emit","Inject","Model","Prop","Provide","Watch","Page","decorators","mixIns","$refs","getElementById","className","pageName","page","pageReady","mixins","Ready","mounted","security","text","simple","encryptedText","sha256","md5","encoders","base64","utf8","decoders","encode","decode","base64Text","dateFormat","datetime","date","timeFormat","time","dateTime","getDateFormat","getTimeFormat","moment","Utils","Storage","DateTime","saveName","__storage","model","set","self","remove","UserModel","token","firstname","lastname","email","documentTitleNavGaurd","to","from","next","title","meta"],"mappings":"CAAA,SAAUA,iCAAiCC,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,WAAY,GAAIH,GACG,iBAAZC,QACdA,QAAkB,SAAID,IAEtBD,EAAe,SAAIC,IARrB,CASGK,QAAQ,WACX,O,YCTE,IAAIC,EAAmB;AAGvB,SAASC,oBAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP;AAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS;AAIVU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM;AAG/DL,EAAOQ,GAAI;AAGX,OAAOR,EAAOD,QAKfM,oBAAoBM,EAAIF;AAGxBJ,oBAAoBO,EAAIR;AAGxBC,oBAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,oBAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL;AAKhEV,oBAAoBgB,EAAI,SAAStB,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO;AAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO;AAQvDnB,oBAAoBoB,EAAI,SAASD,EAAOE,GAC7B,EAAPA,IAAUF,EAAQnB,oBAAoBmB;AACzC,GAAU,EAAPE,EAAU,OAAOF;AACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH;AAChF,IAAII,EAAKX,OAAOY,OAAO;AACvBxB,oBAAoBgB,EAAEO;AACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA;AAChE,GAAU,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,oBAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD;AAC9I,OAAOF;AAIRvB,oBAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,SAASM,aAAe,OAAOjC,EAAgB,SAC/C,SAASkC,mBAAqB,OAAOlC;AACtCK,oBAAoBQ,EAAEE,EAAQ,IAAKA;AACnC,OAAOA;AAIRV,oBAAoBW,EAAI,SAASmB,EAAQC,GAAY,OAAOnB,OAAOoB,UAAUC,eAAe5B,KAAKyB,EAAQC;AAGzG/B,oBAAoBkC,EAAI;AAIxB,OAAOlC,oBAAoBA,oBAAoBmC,EAAI,I,gBClFrDxC,EAAOD,QAAU0C,QAAQ,2B,cCAzBzC,EAAOD,QAAU0C,QAAQ,Q,iBCAzB,YAGEzC,EAAOD,SAiBJ2C,EAAWA,GAAa,SAAUC,EAAMC,GAExC,IAAIC;AAGkB,oBAAX1C,QAA0BA,OAAO0C,SACxCA,EAAS1C,OAAO0C;CAIfA,GAA4B,oBAAX1C,QAA0BA,OAAO2C,WACnDD,EAAS1C,OAAO2C;CAIfD,QAA4B,IAAXE,GAA0BA,EAAOF,SACnDA,EAASE,EAAOF;AAIpB,IAAKA,EACD,IACIA,EAAS,EAAQ,IACnB,MAAOG,IAQb,IAAIC,sBAAwB,WACxB,GAAIJ,EAAQ,CAER,GAAsC,mBAA3BA,EAAOK,gBACd,IACI,OAAOL,EAAOK,gBAAgB,IAAIC,YAAY,IAAI,GACpD,MAAOH,IAIb,GAAkC,mBAAvBH,EAAOO,YACd,IACI,OAAOP,EAAOO,YAAY,GAAGC,cAC/B,MAAOL,KAIjB,MAAM,IAAIM,MAAM,wEAOhBzB,EAASZ,OAAOY,QAAW,WAC3B,SAAS0B,KAET,OAAO,SAAUC,GACb,IAAIC;AAEJF,EAAElB,UAAYmB;AAEdC,EAAU,IAAIF;AAEdA,EAAElB,UAAY;AAEd,OAAOoB,GAZe,GAmB1BC,EAAI,GAKJC,EAAQD,EAAEE,IAAM,GAKhBC,EAAOF,EAAME,KAGN,CAmBHC,OAAQ,SAAUC,GAEd,IAAIN,EAAU5B,EAAOmC;AAGjBD,GACAN,EAAQQ,MAAMF;AAIbN,EAAQnB,eAAe,SAAW0B,KAAKE,OAAST,EAAQS,OACzDT,EAAQS,KAAO,WACXT,EAAQU,OAAOD,KAAKE,MAAMJ,KAAMK;AAKxCZ,EAAQS,KAAK7B,UAAYoB;AAGzBA,EAAQU,OAASH;AAEjB,OAAOP,GAeX5B,OAAQ,WACJ,IAAIyC,EAAWN,KAAKF;AACpBQ,EAASJ,KAAKE,MAAME,EAAUD;AAE9B,OAAOC,GAeXJ,KAAM,aAcND,MAAO,SAAUM,GACb,IAAK,IAAIC,KAAgBD,EACjBA,EAAWjC,eAAekC,KAC1BR,KAAKQ,GAAgBD,EAAWC;AAKpCD,EAAWjC,eAAe,cAC1B0B,KAAKS,SAAWF,EAAWE,WAanCC,MAAO,WACH,OAAOV,KAAKE,KAAK7B,UAAUyB,OAAOE,QAW1CW,EAAYhB,EAAMgB,UAAYd,EAAKC,OAAO,CAa1CI,KAAM,SAAUU,EAAOC,GACnBD,EAAQZ,KAAKY,MAAQA,GAAS;AAG1BZ,KAAKa,SAnOM,MAkOXA,EACgBA,EAEe,EAAfD,EAAME,QAiB9BL,SAAU,SAAUM,GAChB,OAAQA,GAAWC,GAAKC,UAAUjB,OActCkB,OAAQ,SAAUC,GAEd,IAAIC,EAAYpB,KAAKY,MACjBS,EAAYF,EAAUP,MACtBU,EAAetB,KAAKa,SACpBU,EAAeJ,EAAUN;AAG7Bb,KAAKwB;AAGL,GAAIF,EAAe,EAEf,IAAK,IAAI/E,EAAI,EAAGA,EAAIgF,EAAchF,IAAK,CACnC,IAAIkF,EAAYJ,EAAU9E,IAAM,KAAQ,GAAMA,EAAI,EAAK,EAAM;AAC7D6E,EAAWE,EAAe/E,IAAO,IAAMkF,GAAa,IAAOH,EAAe/E,GAAK,EAAK,OAIxF,IAASA,EAAI,EAAGA,EAAIgF,EAAchF,GAAK,EACnC6E,EAAWE,EAAe/E,IAAO,GAAK8E,EAAU9E,IAAM;AAG9DyD,KAAKa,UAAYU;AAGjB,OAAOvB,MAUXwB,MAAO,WAEH,IAAIZ,EAAQZ,KAAKY,MACbC,EAAWb,KAAKa;AAGpBD,EAAMC,IAAa,IAAM,YAAe,GAAMA,EAAW,EAAK;AAC9DD,EAAME,OAASnC,EAAK+C,KAAKb,EAAW,IAYxCH,MAAO,WACH,IAAIA,EAAQb,EAAKa,MAAMhE,KAAKsD;AAC5BU,EAAME,MAAQZ,KAAKY,MAAMe,MAAM;AAE/B,OAAOjB,GAgBXkB,OAAQ,SAAUC,GAGd,IAFA,IAAIjB,EAAQ,GAEHrE,EAAI,EAAGA,EAAIsF,EAAQtF,GAAK,EAC7BqE,EAAMkB,KAAK7C;AAGf,OAAO,IAAI0B,EAAUT,KAAKU,EAAOiB,MAOrCE,EAAQrC,EAAEsC,IAAM,GAKhBhB,EAAMe,EAAMf,IAAM,CAclBC,UAAW,SAAUE,GAOjB,IALA,IAAIP,EAAQO,EAAUP,MAClBC,EAAWM,EAAUN,SAGrBoB,EAAW,GACN1F,EAAI,EAAGA,EAAIsE,EAAUtE,IAAK,CAC/B,IAAI2F,EAAQtB,EAAMrE,IAAM,KAAQ,GAAMA,EAAI,EAAK,EAAM;AACrD0F,EAASH,MAAMI,IAAS,GAAGzB,SAAS;AACpCwB,EAASH,MAAa,GAAPI,GAAazB,SAAS,KAGzC,OAAOwB,EAASE,KAAK,KAgBzBC,MAAO,SAAUC,GAMb,IAJA,IAAIC,EAAeD,EAAOvB,OAGtBF,EAAQ,GACHrE,EAAI,EAAGA,EAAI+F,EAAc/F,GAAK,EACnCqE,EAAMrE,IAAM,IAAMgG,SAASF,EAAOG,OAAOjG,EAAG,GAAI,KAAQ,GAAMA,EAAI,EAAK;AAG3E,OAAO,IAAIoE,EAAUT,KAAKU,EAAO0B,EAAe,KAOpDG,EAASV,EAAMU,OAAS,CAcxBxB,UAAW,SAAUE,GAOjB,IALA,IAAIP,EAAQO,EAAUP,MAClBC,EAAWM,EAAUN,SAGrB6B,EAAc,GACTnG,EAAI,EAAGA,EAAIsE,EAAUtE,IAAK,CAC/B,IAAI2F,EAAQtB,EAAMrE,IAAM,KAAQ,GAAMA,EAAI,EAAK,EAAM;AACrDmG,EAAYZ,KAAKa,OAAOC,aAAaV,IAGzC,OAAOQ,EAAYP,KAAK,KAgB5BC,MAAO,SAAUS,GAMb,IAJA,IAAIC,EAAkBD,EAAU/B,OAG5BF,EAAQ,GACHrE,EAAI,EAAGA,EAAIuG,EAAiBvG,IACjCqE,EAAMrE,IAAM,KAAiC,IAA1BsG,EAAUE,WAAWxG,KAAe,GAAMA,EAAI,EAAK;AAG1E,OAAO,IAAIoE,EAAUT,KAAKU,EAAOkC,KAOrCE,EAAOjB,EAAMiB,KAAO,CAcpB/B,UAAW,SAAUE,GACjB,IACI,OAAO8B,mBAAmBC,OAAOT,EAAOxB,UAAUE,KACpD,MAAOgC,GACL,MAAM,IAAI7D,MAAM,0BAiBxB8C,MAAO,SAAUgB,GACb,OAAOX,EAAOL,MAAMiB,SAASC,mBAAmBF,OAWpDG,EAAyB5D,EAAM4D,uBAAyB1D,EAAKC,OAAO,CAQpE0D,MAAO,WAEHxD,KAAKyD,MAAQ,IAAI9C,EAAUT;AAC3BF,KAAK0D,YAAc,GAavBC,QAAS,SAAUC,GAEI,iBAARA,IACPA,EAAOZ,EAAKZ,MAAMwB;AAItB5D,KAAKyD,MAAMvC,OAAO0C;AAClB5D,KAAK0D,aAAeE,EAAK/C,UAiB7BgD,SAAU,SAAUC,GAChB,IAAIC,EAGAH,EAAO5D,KAAKyD,MACZO,EAAYJ,EAAKhD,MACjBqD,EAAeL,EAAK/C,SACpBqD,EAAYlE,KAAKkE,UACjBC,EAA6B,EAAZD,EAGjBE,EAAeH,EAAeE;AAG9BC,EAFAN,EAEenF,EAAK+C,KAAK0C,GAIVzF,EAAK0F,KAAoB,EAAfD,GAAoBpE,KAAKsE,eAAgB;AAItE,IAAIC,EAAcH,EAAeF,EAG7BM,EAAc7F,EAAK8F,IAAkB,EAAdF,EAAiBN;AAG5C,GAAIM,EAAa,CACb,IAAK,IAAIG,EAAS,EAAGA,EAASH,EAAaG,GAAUR,EAEjDlE,KAAK2E,gBAAgBX,EAAWU;AAIpCX,EAAiBC,EAAUY,OAAO,EAAGL;AACrCX,EAAK/C,UAAY2D,EAIrB,OAAO,IAAI7D,EAAUT,KAAK6D,EAAgBS,IAY9C9D,MAAO,WACH,IAAIA,EAAQb,EAAKa,MAAMhE,KAAKsD;AAC5BU,EAAM+C,MAAQzD,KAAKyD,MAAM/C;AAEzB,OAAOA,GAGX4D,eAAgB,IA2IhBO,GAnISlF,EAAMmF,OAASvB,EAAuBzD,OAAO,CAItDiF,IAAKlF,EAAKC,SAWVI,KAAM,SAAU6E,GAEZ/E,KAAK+E,IAAM/E,KAAK+E,IAAIjF,OAAOiF;AAG3B/E,KAAKwD,SAUTA,MAAO,WAEHD,EAAuBC,MAAM9G,KAAKsD;AAGlCA,KAAKgF,YAeTC,OAAQ,SAAUC,GAEdlF,KAAK2D,QAAQuB;AAGblF,KAAK6D;AAGL,OAAO7D,MAiBXmF,SAAU,SAAUD,GAEZA,GACAlF,KAAK2D,QAAQuB;AAIjB,IAAIE,EAAOpF,KAAKqF;AAEhB,OAAOD,GAGXlB,UAAW,GAeXoB,cAAe,SAAUC,GACrB,OAAO,SAAUC,EAAST,GACtB,OAAO,IAAIQ,EAAOrF,KAAK6E,GAAKI,SAASK,KAiB7CC,kBAAmB,SAAUF,GACzB,OAAO,SAAUC,EAAS1H,GACtB,OAAO,IAAI+G,EAAOa,KAAKxF,KAAKqF,EAAQzH,GAAKqH,SAASK,OAQjD9F,EAAEiG,KAAO;AAEtB,OAAOjG,EAlwBgB,CAmwBzBf,MAGKD;AA1xBN,IAoBGA,I,gCCpBL1C,EAAOD,QAAU0C,QAAQ,gB,cCAzBzC,EAAOD,QAAU0C,QAAQ,U,cCAzBzC,EAAOD,QAAU0C,QAAQ,e,cCAzBzC,EAAOD,QAAU0C,QAAQ,a,gBCGvBzC,EAAOD,QAUD,SAAU2C,GAITgB,EAAIhB,EACJiB,EAAQD,EAAEE,IACVe,EAAYhB,EAAMgB,UAClBoB,EAAQrC,EAAEsC,IAKDD,EAAM6D,OAAS,CAcxB3E,UAAW,SAAUE,GAEjB,IAAIP,EAAQO,EAAUP,MAClBC,EAAWM,EAAUN,SACrBgF,EAAM7F,KAAK8F;AAGf3E,EAAUK;AAIV,IADA,IAAIuE,EAAc,GACTxJ,EAAI,EAAGA,EAAIsE,EAAUtE,GAAK,EAO/B,IANA,IAAIyJ,EAASpF,EAAMrE,IAAM,KAAc,GAAMA,EAAI,EAAK,EAAY,IAC9D0J,EAASrF,EAAOrE,EAAI,IAAO,KAAQ,IAAOA,EAAI,GAAK,EAAK,EAAM,IAC9D2J,EAAStF,EAAOrE,EAAI,IAAO,KAAQ,IAAOA,EAAI,GAAK,EAAK,EAAM,IAE9D4J,EAAWH,GAAS,GAAOC,GAAS,EAAKC,EAEpCE,EAAI,EAAIA,EAAI,GAAO7J,EAAQ,IAAJ6J,EAAWvF,EAAWuF,IAClDL,EAAYjE,KAAK+D,EAAIQ,OAAQF,IAAa,GAAK,EAAIC,GAAO;AAKlE,IAAIE,EAAcT,EAAIQ,OAAO;AAC7B,GAAIC,EACA,KAAOP,EAAYjF,OAAS,GACxBiF,EAAYjE,KAAKwE;AAIzB,OAAOP,EAAY5D,KAAK,KAgB5BC,MAAO,SAAUmE,GAEb,IAAIC,EAAkBD,EAAUzF,OAC5B+E,EAAM7F,KAAK8F,KACXW,EAAazG,KAAK0G;AAEtB,IAAKD,EAAY,CACTA,EAAazG,KAAK0G,YAAc;AAChC,IAAK,IAAIN,EAAI,EAAGA,EAAIP,EAAI/E,OAAQsF,IAC5BK,EAAWZ,EAAI9C,WAAWqD,IAAMA,EAK5C,IAAIE,EAAcT,EAAIQ,OAAO;AAC7B,GAAIC,EAAa,CACb,IAAIK,EAAeJ,EAAUK,QAAQN,IACf,IAAlBK,IACAH,EAAkBG,GAK1B,OAOR,SAASE,UAAUN,EAAWC,EAAiBC,GAG7C,IAFA,IAAI7F,EAAQ,GACRiB,EAAS,EACJtF,EAAI,EAAGA,EAAIiK,EAAiBjK,IACjC,GAAIA,EAAI,EAAG,CACP,IAAIuK,EAAQL,EAAWF,EAAUxD,WAAWxG,EAAI,KAASA,EAAI,EAAK,EAC9DwK,EAAQN,EAAWF,EAAUxD,WAAWxG,MAAS,EAAKA,EAAI,EAAK,EAC/DyK,EAAeF,EAAQC;AAC3BnG,EAAMiB,IAAW,IAAMmF,GAAiB,GAAMnF,EAAS,EAAK;AAC5DA,IAGR,OAAOlB,EAAU9C,OAAO+C,EAAOiB,GAnBlBgF,CAAUN,EAAWC,EAAiBC,IAIjDX,KAAM;AAlGb,IAEOpG,EACAC,EACAgB,EACAoB;AAiHR,OAAOrD,EAASsD,IAAI4D,OAlIQ9J,CAAQ,EAAQ,K,gBCA3CE,EAAOD,QAUD,SAAU2C,IAEhB,SAAUC,GAEP,IAAIe,EAAIhB,EACJiB,EAAQD,EAAEE,IACVe,EAAYhB,EAAMgB,UAClBmE,EAASnF,EAAMmF,OACfD,EAASnF,EAAEiG,KAGXsB,EAAI;CAGP,WACG,IAAK,IAAI1K,EAAI,EAAGA,EAAI,GAAIA,IACpB0K,EAAE1K,GAAkC,WAA5BoC,EAAKuI,IAAIvI,EAAKwI,IAAI5K,EAAI,IAAqB,EAF3D;AASA,IAAI6K,EAAMvC,EAAOuC,IAAMtC,EAAOhF,OAAO,CACjCkF,SAAU,WACNhF,KAAKqH,MAAQ,IAAI1G,EAAUT,KAAK,CAC5B,WAAY,WACZ,WAAY,aAIpByE,gBAAiB,SAAU2C,EAAG5C,GAE1B,IAAK,IAAInI,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAEzB,IAAIgL,EAAW7C,EAASnI,EACpBiL,EAAaF,EAAEC;AAEnBD,EAAEC,GACgD,UAA3CC,GAAc,EAAOA,IAAe,IACO,YAA3CA,GAAc,GAAOA,IAAe,GAK/C,IAAIC,EAAIzH,KAAKqH,MAAMzG,MAEf8G,EAAcJ,EAAE5C,EAAS,GACzBiD,EAAcL,EAAE5C,EAAS,GACzBkD,EAAcN,EAAE5C,EAAS,GACzBmD,EAAcP,EAAE5C,EAAS,GACzBoD,EAAcR,EAAE5C,EAAS,GACzBqD,EAAcT,EAAE5C,EAAS,GACzBsD,EAAcV,EAAE5C,EAAS,GACzBuD,EAAcX,EAAE5C,EAAS,GACzBwD,EAAcZ,EAAE5C,EAAS,GACzByD,EAAcb,EAAE5C,EAAS,GACzB0D,EAAcd,EAAE5C,EAAS,IACzB2D,EAAcf,EAAE5C,EAAS,IACzB4D,EAAchB,EAAE5C,EAAS,IACzB6D,EAAcjB,EAAE5C,EAAS,IACzB8D,EAAclB,EAAE5C,EAAS,IACzB+D,EAAcnB,EAAE5C,EAAS,IAGzBgE,EAAIjB,EAAE,GACNkB,EAAIlB,EAAE,GACN7K,EAAI6K,EAAE,GACN5K,EAAI4K,EAAE;AAGViB,EAAIE,GAAGF,EAAGC,EAAG/L,EAAGC,EAAG6K,EAAa,EAAIT,EAAE;AACtCpK,EAAI+L,GAAG/L,EAAG6L,EAAGC,EAAG/L,EAAG+K,EAAa,GAAIV,EAAE;AACtCrK,EAAIgM,GAAGhM,EAAGC,EAAG6L,EAAGC,EAAGf,EAAa,GAAIX,EAAE;AACtC0B,EAAIC,GAAGD,EAAG/L,EAAGC,EAAG6L,EAAGb,EAAa,GAAIZ,EAAE;AACtCyB,EAAIE,GAAGF,EAAGC,EAAG/L,EAAGC,EAAGiL,EAAa,EAAIb,EAAE;AACtCpK,EAAI+L,GAAG/L,EAAG6L,EAAGC,EAAG/L,EAAGmL,EAAa,GAAId,EAAE;AACtCrK,EAAIgM,GAAGhM,EAAGC,EAAG6L,EAAGC,EAAGX,EAAa,GAAIf,EAAE;AACtC0B,EAAIC,GAAGD,EAAG/L,EAAGC,EAAG6L,EAAGT,EAAa,GAAIhB,EAAE;AACtCyB,EAAIE,GAAGF,EAAGC,EAAG/L,EAAGC,EAAGqL,EAAa,EAAIjB,EAAE;AACtCpK,EAAI+L,GAAG/L,EAAG6L,EAAGC,EAAG/L,EAAGuL,EAAa,GAAIlB,EAAE;AACtCrK,EAAIgM,GAAGhM,EAAGC,EAAG6L,EAAGC,EAAGP,EAAa,GAAInB,EAAE;AACtC0B,EAAIC,GAAGD,EAAG/L,EAAGC,EAAG6L,EAAGL,EAAa,GAAIpB,EAAE;AACtCyB,EAAIE,GAAGF,EAAGC,EAAG/L,EAAGC,EAAGyL,EAAa,EAAIrB,EAAE;AACtCpK,EAAI+L,GAAG/L,EAAG6L,EAAGC,EAAG/L,EAAG2L,EAAa,GAAItB,EAAE;AACtCrK,EAAIgM,GAAGhM,EAAGC,EAAG6L,EAAGC,EAAGH,EAAa,GAAIvB,EAAE;AACtC0B,EAAIC,GAAGD,EAAG/L,EAAGC,EAAG6L,EAAGD,EAAa,GAAIxB,EAAE;AAEtCyB,EAAIG,GAAGH,EAAGC,EAAG/L,EAAGC,EAAG8K,EAAa,EAAIV,EAAE;AACtCpK,EAAIgM,GAAGhM,EAAG6L,EAAGC,EAAG/L,EAAGoL,EAAa,EAAIf,EAAE;AACtCrK,EAAIiM,GAAGjM,EAAGC,EAAG6L,EAAGC,EAAGN,EAAa,GAAIpB,EAAE;AACtC0B,EAAIE,GAAGF,EAAG/L,EAAGC,EAAG6L,EAAGhB,EAAa,GAAIT,EAAE;AACtCyB,EAAIG,GAAGH,EAAGC,EAAG/L,EAAGC,EAAGkL,EAAa,EAAId,EAAE;AACtCpK,EAAIgM,GAAGhM,EAAG6L,EAAGC,EAAG/L,EAAGwL,EAAa,EAAInB,EAAE;AACtCrK,EAAIiM,GAAGjM,EAAGC,EAAG6L,EAAGC,EAAGF,EAAa,GAAIxB,EAAE;AACtC0B,EAAIE,GAAGF,EAAG/L,EAAGC,EAAG6L,EAAGZ,EAAa,GAAIb,EAAE;AACtCyB,EAAIG,GAAGH,EAAGC,EAAG/L,EAAGC,EAAGsL,EAAa,EAAIlB,EAAE;AACtCpK,EAAIgM,GAAGhM,EAAG6L,EAAGC,EAAG/L,EAAG4L,EAAa,EAAIvB,EAAE;AACtCrK,EAAIiM,GAAGjM,EAAGC,EAAG6L,EAAGC,EAAGd,EAAa,GAAIZ,EAAE;AACtC0B,EAAIE,GAAGF,EAAG/L,EAAGC,EAAG6L,EAAGR,EAAa,GAAIjB,EAAE;AACtCyB,EAAIG,GAAGH,EAAGC,EAAG/L,EAAGC,EAAG0L,EAAa,EAAItB,EAAE;AACtCpK,EAAIgM,GAAGhM,EAAG6L,EAAGC,EAAG/L,EAAGgL,EAAa,EAAIX,EAAE;AACtCrK,EAAIiM,GAAGjM,EAAGC,EAAG6L,EAAGC,EAAGV,EAAa,GAAIhB,EAAE;AACtC0B,EAAIE,GAAGF,EAAG/L,EAAGC,EAAG6L,EAAGJ,EAAa,GAAIrB,EAAE;AAEtCyB,EAAII,GAAGJ,EAAGC,EAAG/L,EAAGC,EAAGkL,EAAa,EAAId,EAAE;AACtCpK,EAAIiM,GAAGjM,EAAG6L,EAAGC,EAAG/L,EAAGsL,EAAa,GAAIjB,EAAE;AACtCrK,EAAIkM,GAAGlM,EAAGC,EAAG6L,EAAGC,EAAGN,EAAa,GAAIpB,EAAE;AACtC0B,EAAIG,GAAGH,EAAG/L,EAAGC,EAAG6L,EAAGF,EAAa,GAAIvB,EAAE;AACtCyB,EAAII,GAAGJ,EAAGC,EAAG/L,EAAGC,EAAG8K,EAAa,EAAIV,EAAE;AACtCpK,EAAIiM,GAAGjM,EAAG6L,EAAGC,EAAG/L,EAAGkL,EAAa,GAAIb,EAAE;AACtCrK,EAAIkM,GAAGlM,EAAGC,EAAG6L,EAAGC,EAAGV,EAAa,GAAIhB,EAAE;AACtC0B,EAAIG,GAAGH,EAAG/L,EAAGC,EAAG6L,EAAGN,EAAa,GAAInB,EAAE;AACtCyB,EAAII,GAAGJ,EAAGC,EAAG/L,EAAGC,EAAG0L,EAAa,EAAItB,EAAE;AACtCpK,EAAIiM,GAAGjM,EAAG6L,EAAGC,EAAG/L,EAAG8K,EAAa,GAAIT,EAAE;AACtCrK,EAAIkM,GAAGlM,EAAGC,EAAG6L,EAAGC,EAAGd,EAAa,GAAIZ,EAAE;AACtC0B,EAAIG,GAAGH,EAAG/L,EAAGC,EAAG6L,EAAGV,EAAa,GAAIf,EAAE;AACtCyB,EAAII,GAAGJ,EAAGC,EAAG/L,EAAGC,EAAGsL,EAAa,EAAIlB,EAAE;AACtCpK,EAAIiM,GAAGjM,EAAG6L,EAAGC,EAAG/L,EAAG0L,EAAa,GAAIrB,EAAE;AACtCrK,EAAIkM,GAAGlM,EAAGC,EAAG6L,EAAGC,EAAGF,EAAa,GAAIxB,EAAE;AACtC0B,EAAIG,GAAGH,EAAG/L,EAAGC,EAAG6L,EAAGd,EAAa,GAAIX,EAAE;AAEtCyB,EAAIK,GAAGL,EAAGC,EAAG/L,EAAGC,EAAG6K,EAAa,EAAIT,EAAE;AACtCpK,EAAIkM,GAAGlM,EAAG6L,EAAGC,EAAG/L,EAAGqL,EAAa,GAAIhB,EAAE;AACtCrK,EAAImM,GAAGnM,EAAGC,EAAG6L,EAAGC,EAAGH,EAAa,GAAIvB,EAAE;AACtC0B,EAAII,GAAGJ,EAAG/L,EAAGC,EAAG6L,EAAGX,EAAa,GAAId,EAAE;AACtCyB,EAAIK,GAAGL,EAAGC,EAAG/L,EAAGC,EAAGyL,EAAa,EAAIrB,EAAE;AACtCpK,EAAIkM,GAAGlM,EAAG6L,EAAGC,EAAG/L,EAAGiL,EAAa,GAAIZ,EAAE;AACtCrK,EAAImM,GAAGnM,EAAGC,EAAG6L,EAAGC,EAAGP,EAAa,GAAInB,EAAE;AACtC0B,EAAII,GAAGJ,EAAG/L,EAAGC,EAAG6L,EAAGf,EAAa,GAAIV,EAAE;AACtCyB,EAAIK,GAAGL,EAAGC,EAAG/L,EAAGC,EAAGqL,EAAa,EAAIjB,EAAE;AACtCpK,EAAIkM,GAAGlM,EAAG6L,EAAGC,EAAG/L,EAAG6L,EAAa,GAAIxB,EAAE;AACtCrK,EAAImM,GAAGnM,EAAGC,EAAG6L,EAAGC,EAAGX,EAAa,GAAIf,EAAE;AACtC0B,EAAII,GAAGJ,EAAG/L,EAAGC,EAAG6L,EAAGH,EAAa,GAAItB,EAAE;AACtCyB,EAAIK,GAAGL,EAAGC,EAAG/L,EAAGC,EAAGiL,EAAa,EAAIb,EAAE;AACtCpK,EAAIkM,GAAGlM,EAAG6L,EAAGC,EAAG/L,EAAGyL,EAAa,GAAIpB,EAAE;AACtCrK,EAAImM,GAAGnM,EAAGC,EAAG6L,EAAGC,EAAGf,EAAa,GAAIX,EAAE;AACtC0B,EAAII,GAAGJ,EAAG/L,EAAGC,EAAG6L,EAAGP,EAAa,GAAIlB,EAAE;AAGtCQ,EAAE,GAAMA,EAAE,GAAKiB,EAAK;AACpBjB,EAAE,GAAMA,EAAE,GAAKkB,EAAK;AACpBlB,EAAE,GAAMA,EAAE,GAAK7K,EAAK;AACpB6K,EAAE,GAAMA,EAAE,GAAK5K,EAAK,GAGxBwI,YAAa,WAET,IAAIzB,EAAO5D,KAAKyD,MACZO,EAAYJ,EAAKhD,MAEjBoI,EAAgC,EAAnBhJ,KAAK0D,YAClBuF,EAA4B,EAAhBrF,EAAK/C;AAGrBmD,EAAUiF,IAAc,IAAM,KAAS,GAAKA,EAAY;AAExD,IAAIC,EAAcvK,EAAKwK,MAAMH,EAAa,YACtCI,EAAcJ;AAClBhF,EAA4C,IAA/BiF,EAAY,KAAQ,GAAM,IACa,UAA7CC,GAAe,EAAOA,IAAgB,IACO,YAA7CA,GAAe,GAAOA,IAAgB;AAE7ClF,EAA4C,IAA/BiF,EAAY,KAAQ,GAAM,IACa,UAA7CG,GAAe,EAAOA,IAAgB,IACO,YAA7CA,GAAe,GAAOA,IAAgB;AAG7CxF,EAAK/C,SAAoC,GAAxBmD,EAAUlD,OAAS;AAGpCd,KAAK6D;AAOL,IAJA,IAAIuB,EAAOpF,KAAKqH,MACZI,EAAIrC,EAAKxE,MAGJrE,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAExB,IAAI8M,EAAM5B,EAAElL;AAEZkL,EAAElL,GAAqC,UAA7B8M,GAAO,EAAOA,IAAQ,IACO,YAA7BA,GAAO,GAAOA,IAAQ,GAIpC,OAAOjE,GAGX1E,MAAO,WACH,IAAIA,EAAQoE,EAAOpE,MAAMhE,KAAKsD;AAC9BU,EAAM2G,MAAQrH,KAAKqH,MAAM3G;AAEzB,OAAOA;AAIf,SAASkI,GAAGF,EAAGC,EAAG/L,EAAGC,EAAGyM,EAAG9K,EAAGf,GAC1B,IAAIO,EAAI0K,GAAMC,EAAI/L,GAAO+L,EAAI9L,GAAMyM,EAAI7L;AACvC,OAASO,GAAKQ,EAAMR,IAAO,GAAKQ,GAAOmK,EAG3C,SAASE,GAAGH,EAAGC,EAAG/L,EAAGC,EAAGyM,EAAG9K,EAAGf,GAC1B,IAAIO,EAAI0K,GAAMC,EAAI9L,EAAMD,GAAKC,GAAMyM,EAAI7L;AACvC,OAASO,GAAKQ,EAAMR,IAAO,GAAKQ,GAAOmK,EAG3C,SAASG,GAAGJ,EAAGC,EAAG/L,EAAGC,EAAGyM,EAAG9K,EAAGf,GAC1B,IAAIO,EAAI0K,GAAKC,EAAI/L,EAAIC,GAAKyM,EAAI7L;AAC9B,OAASO,GAAKQ,EAAMR,IAAO,GAAKQ,GAAOmK,EAG3C,SAASI,GAAGL,EAAGC,EAAG/L,EAAGC,EAAGyM,EAAG9K,EAAGf,GAC1B,IAAIO,EAAI0K,GAAK9L,GAAK+L,GAAK9L,IAAMyM,EAAI7L;AACjC,OAASO,GAAKQ,EAAMR,IAAO,GAAKQ,GAAOmK,EAiB3CjJ,EAAE0H,IAAMtC,EAAOQ,cAAc8B;AAgB7B1H,EAAE6J,QAAUzE,EAAOW,kBAAkB2B,GAtPzC,CAuPEzI;AAGF,OAAOD,EAAS0I,IAtQYtL,CAAQ,EAAQ,K,gBCA3CE,EAAOD,SAUS2C,EAVmB,EAAQ,GAYrCA,EAASsD,IAAIgB;AAfnB,IAagBtE,G,gBCVhB1C,EAAOD,QAUD,SAAU2C,GAITgB,EAAIhB,EACJiB,EAAQD,EAAEE,IACVC,EAAOF,EAAME,KACbc,EAAYhB,EAAMgB,UAClBkE,EAASnF,EAAEiG,KACXyB,EAAMvC,EAAOuC,IAMboC,EAAS3E,EAAO2E,OAAS3J,EAAKC,OAAO,CAQrCiF,IAAKlF,EAAKC,OAAO,CACb2J,QAAS,EACTlE,OAAQ6B,EACRsC,WAAY,IAchBxJ,KAAM,SAAU6E,GACZ/E,KAAK+E,IAAM/E,KAAK+E,IAAIjF,OAAOiF,IAe/B4E,QAAS,SAAUC,EAAUC,GAkBzB,IAjBA,IAAIC,EAGA/E,EAAM/E,KAAK+E,IAGXQ,EAASR,EAAIQ,OAAO1H,SAGpBkM,EAAapJ,EAAU9C,SAGvBmM,EAAkBD,EAAWnJ,MAC7B6I,EAAU1E,EAAI0E,QACdC,EAAa3E,EAAI2E,WAGdM,EAAgBlJ,OAAS2I,GAAS,CACjCK,GACAvE,EAAON,OAAO6E;AAElBA,EAAQvE,EAAON,OAAO2E,GAAUzE,SAAS0E;AACzCtE,EAAO/B;AAGP,IAAK,IAAIjH,EAAI,EAAGA,EAAImN,EAAYnN,IAAK,CACjCuN,EAAQvE,EAAOJ,SAAS2E;AACxBvE,EAAO/B,QAGXuG,EAAW7I,OAAO4I,GAEtBC,EAAWlJ,SAAqB,EAAV4I;AAEtB,OAAOM,KAqBfrK,EAAE8J,OAAS,SAAUI,EAAUC,EAAM9E,GACjC,OAAOyE,EAAO3L,OAAOkH,GAAK4E,QAAQC,EAAUC;AA/GnD,IAEOnK,EACAC,EACAE,EACAc,EACAkE,EACAuC,EAMAoC;AAuGR,OAAO9K,EAAS8K,OAhIY1N,CAAQ,EAAQ,GAAW,EAAQ,IAAW,EAAQ,M,8BCHnFE,EAAOD,QAAU0C,QAAQ,S,cCAzBzC,EAAOD,QAAU0C,QAAQ,wB,gBCGvBzC,EAAOD,QAUD,SAAU2C,IAEhB,SAAUC,GAEP,IAAIe,EAAIhB,EACJiB,EAAQD,EAAEE,IACVe,EAAYhB,EAAMgB,UAClBmE,EAASnF,EAAMmF,OACfD,EAASnF,EAAEiG,KAGX8B,EAAI,GACJwC,EAAI;CAGP,WACG,SAASC,QAAQlM,GAEb,IADA,IAAImM,EAAQxL,EAAKyL,KAAKpM,GACbqM,EAAS,EAAGA,GAAUF,EAAOE,IAClC,KAAMrM,EAAIqM,GACN,OAAO;AAIf,OAAO,EAGX,SAASC,kBAAkBtM,GACvB,OAAwB,YAAfA,GAAS,EAAJA,IAAyB,EAK3C,IAFA,IAAIA,EAAI,EACJuM,EAAS,EACNA,EAAS,IAAI,CAChB,GAAIL,QAAQlM,GAAI,CACRuM,EAAS,IACT9C,EAAE8C,GAAUD,kBAAkB3L,EAAK6L,IAAIxM,EAAG;AAE9CiM,EAAEM,GAAUD,kBAAkB3L,EAAK6L,IAAIxM,EAAG,EAAI;AAE9CuM,IAGJvM,KA5BR;AAiCA,IAAIyM,EAAI,GAKJC,EAAS7F,EAAO6F,OAAS5F,EAAOhF,OAAO,CACvCkF,SAAU,WACNhF,KAAKqH,MAAQ,IAAI1G,EAAUT,KAAKuH,EAAE9F,MAAM,KAG5CgD,gBAAiB,SAAU2C,EAAG5C,GAe1B,IAbA,IAAI+C,EAAIzH,KAAKqH,MAAMzG,MAGf8H,EAAIjB,EAAE,GACNkB,EAAIlB,EAAE,GACN7K,EAAI6K,EAAE,GACN5K,EAAI4K,EAAE,GACNtE,EAAIsE,EAAE,GACNkD,EAAIlD,EAAE,GACNmD,EAAInD,EAAE,GACNoD,EAAIpD,EAAE,GAGDlL,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,GAAIA,EAAI,GACJkO,EAAElO,GAAqB,EAAhB+K,EAAE5C,EAASnI;IACf,CACH,IAAIuO,EAAUL,EAAElO,EAAI,IAChBwO,GAAYD,GAAW,GAAOA,IAAY,IAC9BA,GAAW,GAAOA,IAAY,IAC9BA,IAAY,EAExBE,EAAUP,EAAElO,EAAI,GAChB0O,GAAYD,GAAW,GAAOA,IAAY,KAC9BA,GAAW,GAAOA,IAAY,IAC9BA,IAAY;AAE5BP,EAAElO,GAAKwO,EAASN,EAAElO,EAAI,GAAK0O,EAASR,EAAElO,EAAI,IAG9C,IAAI2O,EAAO/H,EAAIwH,GAAOxH,EAAIyH,EACtBO,EAAOzC,EAAIC,EAAMD,EAAI9L,EAAM+L,EAAI/L,EAE/BwO,GAAW1C,GAAK,GAAOA,IAAM,IAAQA,GAAK,GAAOA,IAAM,KAASA,GAAK,GAAOA,IAAM,IAClF2C,GAAWlI,GAAK,GAAOA,IAAM,IAAQA,GAAK,GAAOA,IAAM,KAASA,GAAK,EAAOA,IAAM,IAElFmI,EAAKT,EAAIQ,EAASH,EAAKjB,EAAE1N,GAAKkO,EAAElO,GAChCgP,EAAKH,EAASD;AAElBN,EAAID;AACJA,EAAID;AACJA,EAAIxH;AACJA,EAAKtG,EAAIyO,EAAM;AACfzO,EAAID;AACJA,EAAI+L;AACJA,EAAID;AACJA,EAAK4C,EAAKC,EAAM,EAIpB9D,EAAE,GAAMA,EAAE,GAAKiB,EAAK;AACpBjB,EAAE,GAAMA,EAAE,GAAKkB,EAAK;AACpBlB,EAAE,GAAMA,EAAE,GAAK7K,EAAK;AACpB6K,EAAE,GAAMA,EAAE,GAAK5K,EAAK;AACpB4K,EAAE,GAAMA,EAAE,GAAKtE,EAAK;AACpBsE,EAAE,GAAMA,EAAE,GAAKkD,EAAK;AACpBlD,EAAE,GAAMA,EAAE,GAAKmD,EAAK;AACpBnD,EAAE,GAAMA,EAAE,GAAKoD,EAAK,GAGxBxF,YAAa,WAET,IAAIzB,EAAO5D,KAAKyD,MACZO,EAAYJ,EAAKhD,MAEjBoI,EAAgC,EAAnBhJ,KAAK0D,YAClBuF,EAA4B,EAAhBrF,EAAK/C;AAGrBmD,EAAUiF,IAAc,IAAM,KAAS,GAAKA,EAAY;AACxDjF,EAA4C,IAA/BiF,EAAY,KAAQ,GAAM,IAAWtK,EAAKwK,MAAMH,EAAa;AAC1EhF,EAA4C,IAA/BiF,EAAY,KAAQ,GAAM,IAAWD;AAClDpF,EAAK/C,SAA8B,EAAnBmD,EAAUlD;AAG1Bd,KAAK6D;AAGL,OAAO7D,KAAKqH,OAGhB3G,MAAO,WACH,IAAIA,EAAQoE,EAAOpE,MAAMhE,KAAKsD;AAC9BU,EAAM2G,MAAQrH,KAAKqH,MAAM3G;AAEzB,OAAOA;AAkBfhB,EAAEgL,OAAS5F,EAAOQ,cAAcoF;AAgBhChL,EAAE8L,WAAa1G,EAAOW,kBAAkBiF,GAjL5C,CAkLE/L;AAGF,OAAOD,EAASgM,OAjMY5O,CAAQ,EAAQ,K,gBCA3CE,EAAOD,QAUD,SAAU2C,IAEhB,WAEG,IAAIgB,EAAIhB,EACJiB,EAAQD,EAAEE,IACV6L,EAAc9L,EAAM8L,YACpB5G,EAASnF,EAAEiG,KAGX+F,EAAO,GACPC,EAAW,GACXC,EAAY,GACZC,EAAY,GACZC,EAAY,GACZC,EAAY,GACZC,EAAgB,GAChBC,EAAgB,GAChBC,EAAgB,GAChBC,EAAgB;CAGnB,WAGG,IADA,IAAItP,EAAI,GACCN,EAAI,EAAGA,EAAI,IAAKA,IAEjBM,EAAEN,GADFA,EAAI,IACGA,GAAK,EAEJA,GAAK,EAAK;AAK1B,IAAI+M,EAAI,EACJ8C,EAAK;AACT,IAAS7P,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAE1B,IAAI8P,EAAKD,EAAMA,GAAM,EAAMA,GAAM,EAAMA,GAAM,EAAMA,GAAM;AACzDC,EAAMA,IAAO,EAAW,IAALA,EAAa;AAChCX,EAAKpC,GAAK+C;AACVV,EAASU,GAAM/C;AAGf,IAAIgD,EAAKzP,EAAEyM,GACPiD,EAAK1P,EAAEyP,GACPE,EAAK3P,EAAE0P,GAGP9O,EAAa,IAARZ,EAAEwP,GAAqB,SAALA;AAC3BT,EAAUtC,GAAM7L,GAAK,GAAOA,IAAM;AAClCoO,EAAUvC,GAAM7L,GAAK,GAAOA,IAAM;AAClCqO,EAAUxC,GAAM7L,GAAK,EAAOA,IAAM;AAClCsO,EAAUzC,GAAK7L;AAGXA,EAAU,SAAL+O,EAAwB,MAALD,EAAsB,IAALD,EAAmB,SAAJhD;AAC5D0C,EAAcK,GAAO5O,GAAK,GAAOA,IAAM;AACvCwO,EAAcI,GAAO5O,GAAK,GAAOA,IAAM;AACvCyO,EAAcG,GAAO5O,GAAK,EAAOA,IAAM;AACvC0O,EAAcE,GAAM5O;AAGpB,GAAK6L,EAEE,CACHA,EAAIgD,EAAKzP,EAAEA,EAAEA,EAAE2P,EAAKF;AACpBF,GAAMvP,EAAEA,EAAEuP,SAHV9C,EAAI8C,EAAK,GA1CrB;AAmDA,IAAIK,EAAO,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAKpEC,EAAM7H,EAAO6H,IAAMjB,EAAY3L,OAAO,CACtCkF,SAAU,WAIN,IAAIhF,KAAK2M,UAAY3M,KAAK4M,iBAAmB5M,KAAK6M,KAAlD,CAiBA,IAZA,IAAI/O,EAAMkC,KAAK4M,eAAiB5M,KAAK6M,KACjCC,EAAWhP,EAAI8C,MACf6I,EAAU3L,EAAI+C,SAAW,EAGzBkM,EAAU/M,KAAK2M,SAAWlD,EAAU,EAGpCuD,EAAyB,GAAfD,EAAU,GAGpBE,EAAcjN,KAAKkN,aAAe,GAC7BC,EAAQ,EAAGA,EAAQH,EAAQG,IAChC,GAAIA,EAAQ1D,EACRwD,EAAYE,GAASL,EAASK;IAC3B,CACH1P,EAAIwP,EAAYE,EAAQ;AAExB,GAAMA,EAAQ1D,EASHA,EAAU,GAAK0D,EAAQ1D,GAAW,IAEzChM,EAAKiO,EAAKjO,IAAM,KAAO,GAAOiO,EAAMjO,IAAM,GAAM,MAAS,GAAOiO,EAAMjO,IAAM,EAAK,MAAS,EAAKiO,EAAS,IAAJjO;IAXhF,CAEpBA,EAAKA,GAAK,EAAMA,IAAM;AAGtBA,EAAKiO,EAAKjO,IAAM,KAAO,GAAOiO,EAAMjO,IAAM,GAAM,MAAS,GAAOiO,EAAMjO,IAAM,EAAK,MAAS,EAAKiO,EAAS,IAAJjO;AAGpGA,GAAKgP,EAAMU,EAAQ1D,EAAW,IAAM,GAMxCwD,EAAYE,GAASF,EAAYE,EAAQ1D,GAAWhM,EAM5D,IADA,IAAI2P,EAAiBpN,KAAKqN,gBAAkB,GACnCC,EAAW,EAAGA,EAAWN,EAAQM,IAAY,CAC9CH,EAAQH,EAASM;AAErB,GAAIA,EAAW,EACX,IAAI7P,EAAIwP,EAAYE;KAEhB1P,EAAIwP,EAAYE,EAAQ;AAI5BC,EAAeE,GADfA,EAAW,GAAKH,GAAS,EACE1P,EAEAuO,EAAcN,EAAKjO,IAAM,KAAOwO,EAAcP,EAAMjO,IAAM,GAAM,MAChEyO,EAAcR,EAAMjO,IAAM,EAAK,MAAS0O,EAAcT,EAAS,IAAJjO,OAKlG8P,aAAc,SAAUjG,EAAG5C,GACvB1E,KAAKwN,cAAclG,EAAG5C,EAAQ1E,KAAKkN,aAActB,EAAWC,EAAWC,EAAWC,EAAWL,IAGjG+B,aAAc,SAAUnG,EAAG5C,GAEvB,IAAIjH,EAAI6J,EAAE5C,EAAS;AACnB4C,EAAE5C,EAAS,GAAK4C,EAAE5C,EAAS;AAC3B4C,EAAE5C,EAAS,GAAKjH;AAEhBuC,KAAKwN,cAAclG,EAAG5C,EAAQ1E,KAAKqN,gBAAiBrB,EAAeC,EAAeC,EAAeC,EAAeR;AAG5GlO,EAAI6J,EAAE5C,EAAS;AACnB4C,EAAE5C,EAAS,GAAK4C,EAAE5C,EAAS;AAC3B4C,EAAE5C,EAAS,GAAKjH,GAGpB+P,cAAe,SAAUlG,EAAG5C,EAAQuI,EAAarB,EAAWC,EAAWC,EAAWC,EAAWL,GAczF,IAZA,IAAIqB,EAAU/M,KAAK2M,SAGfe,EAAKpG,EAAE5C,GAAcuI,EAAY,GACjCU,EAAKrG,EAAE5C,EAAS,GAAKuI,EAAY,GACjCW,EAAKtG,EAAE5C,EAAS,GAAKuI,EAAY,GACjCY,EAAKvG,EAAE5C,EAAS,GAAKuI,EAAY,GAGjCE,EAAQ,EAGHW,EAAQ,EAAGA,EAAQf,EAASe,IAAS,CAE1C,IAAIC,EAAKnC,EAAU8B,IAAO,IAAM7B,EAAW8B,IAAO,GAAM,KAAQ7B,EAAW8B,IAAO,EAAK,KAAQ7B,EAAe,IAAL8B,GAAaZ,EAAYE,KAC9H7B,EAAKM,EAAU+B,IAAO,IAAM9B,EAAW+B,IAAO,GAAM,KAAQ9B,EAAW+B,IAAO,EAAK,KAAQ9B,EAAe,IAAL2B,GAAaT,EAAYE,KAC9H5B,EAAKK,EAAUgC,IAAO,IAAM/B,EAAWgC,IAAO,GAAM,KAAQ/B,EAAW4B,IAAO,EAAK,KAAQ3B,EAAe,IAAL4B,GAAaV,EAAYE,KAC9Ha,EAAKpC,EAAUiC,IAAO,IAAMhC,EAAW6B,IAAO,GAAM,KAAQ5B,EAAW6B,IAAO,EAAK,KAAQ5B,EAAe,IAAL6B,GAAaX,EAAYE;AAGlIO,EAAKK;AACLJ,EAAKrC;AACLsC,EAAKrC;AACLsC,EAAKG,EAILD,GAAOrC,EAAKgC,IAAO,KAAO,GAAOhC,EAAMiC,IAAO,GAAM,MAAS,GAAOjC,EAAMkC,IAAO,EAAK,MAAS,EAAKlC,EAAU,IAALmC,IAAcZ,EAAYE,KACnI7B,GAAOI,EAAKiC,IAAO,KAAO,GAAOjC,EAAMkC,IAAO,GAAM,MAAS,GAAOlC,EAAMmC,IAAO,EAAK,MAAS,EAAKnC,EAAU,IAALgC,IAAcT,EAAYE,KACnI5B,GAAOG,EAAKkC,IAAO,KAAO,GAAOlC,EAAMmC,IAAO,GAAM,MAAS,GAAOnC,EAAMgC,IAAO,EAAK,MAAS,EAAKhC,EAAU,IAALiC,IAAcV,EAAYE,KACnIa,GAAOtC,EAAKmC,IAAO,KAAO,GAAOnC,EAAMgC,IAAO,GAAM,MAAS,GAAOhC,EAAMiC,IAAO,EAAK,MAAS,EAAKjC,EAAU,IAALkC,IAAcX,EAAYE;AAGvI7F,EAAE5C,GAAcqJ;AAChBzG,EAAE5C,EAAS,GAAK4G;AAChBhE,EAAE5C,EAAS,GAAK6G;AAChBjE,EAAE5C,EAAS,GAAKsJ,GAGpBvE,QAAS;AAWb/J,EAAEgN,IAAMjB,EAAYnG,cAAcoH,GApNtC;AAwNA,OAAOhO,EAASgO,IApOY5Q,CAAQ,EAAQ,GAAW,EAAQ,GAAiB,EAAQ,GAAU,EAAQ,IAAa,EAAQ,M,cCHhIE,EAAOD,QAAU0C,QAAQ,W,+CCAzB,IAAImM;AAGJA,EAAI,WACH,OAAO5K,KADJ;AAIJ,IAEC4K,EAAIA,GAAK,IAAIqD,SAAS,cAAb,GACR,MAAO9K,GAEc,iBAAXhH,SAAqByO,EAAIzO,QAOrCH,EAAOD,QAAU6O,G;ACjBjB7O,EAAQqD,YAAcrD,EAAQmS,IAAMnS,EAAQoS,kBAAoBpS,EAAQqS,KAAO,EAAQ;AACvFrS,EAAQsS,WAAatS,EAAQuS,KAAO,EAAQ;AAC5CvS,EAAQwS,WAAaxS,EAAQyS,KAAO,EAAQ;AAE5C,IAAIC,EAAQ,EAAQ,IAChBC,EAAWzR,OAAO0R,KAAKF,GACvBG,EAAS,CAAC,OAAQ,SAAU,SAAU,SAAU,SAAU,MAAO,UAAU1N,OAAOwN;AACtF3S,EAAQ8S,UAAY,WAClB,OAAOD;AAGT,IAAIrQ,EAAI,EAAQ;AAChBxC,EAAQ+S,OAASvQ,EAAEuQ;AACnB/S,EAAQgT,WAAaxQ,EAAEwQ;AAEvB,IAAIC,EAAM,EAAQ;AAElBjT,EAAQkT,OAASD,EAAIC;AACrBlT,EAAQmT,aAAeF,EAAIE;AAC3BnT,EAAQoT,SAAWH,EAAIG;AACvBpT,EAAQqT,eAAiBJ,EAAII;AAC7BrT,EAAQsT,SAAWL,EAAIK;AACvBtT,EAAQuT,eAAiBN,EAAIM;AAC7BvT,EAAQwT,WAAaP,EAAIO;AACzBxT,EAAQyT,iBAAmBR,EAAIQ;AAC/BzT,EAAQ0T,WAAaT,EAAIS;AACzB1T,EAAQ2T,YAAcV,EAAIU;AAE1B,IAAIC,EAAK,EAAQ;AAEjB5T,EAAQ6T,mBAAqBD,EAAGC;AAChC7T,EAAQ8T,yBAA2BF,EAAGE;AACtC9T,EAAQ+T,iBAAmBH,EAAGG;AAC9B/T,EAAQgU,oBAAsBJ,EAAGI;AACjChU,EAAQiU,cAAgBL,EAAGK;AAE3B,IAAIC,EAAO,EAAQ;AAEnBlU,EAAQmU,WAAaD,EAAKC;AAC1BnU,EAAQoU,KAAOF,EAAKE;AACpBpU,EAAQqU,aAAeH,EAAKG;AAC5BrU,EAAQsU,OAASJ,EAAKI;AAEtBtU,EAAQuU,WAAa,EAAQ;AAE7B,IAAIC,EAAgB,EAAQ;AAE5BxU,EAAQwU,cAAgBA,EAAcA;AACtCxU,EAAQyU,eAAiBD,EAAcC;AACvCzU,EAAQ0U,cAAgBF,EAAcE;AACtC1U,EAAQ2U,eAAiBH,EAAcG;AAevC,IAAIC,EAAK,EAAQ;AAEjB5U,EAAQ6U,WAAaD,EAAGC;AACxB7U,EAAQ8U,eAAiBF,EAAGE;AAE5B9U,EAAQ+U,kBAAoB,WAC1B,MAAM,IAAIxR,MAAM,CACd,kDACA,0BACA,0DACA6C,KAAK;AAGTpG,EAAQgV,UAAY,CAClB,0BAA6B,EAC7B,qBAAwB,EACxB,6BAAgC,EAChC,0BAA6B,EAC7B,YAAe,EACf,aAAgB,EAChB,kBAAqB,EACrB,mBAAsB,EACtB,eAAkB,EAClB,uBAA0B,EAC1B,iBAAoB,EACpB,sBAAyB,EACzB,4BAA+B,EAC/B,8BAAiC,EACjC,wBAA2B,I,cC/F7B/U,EAAOD,QAAU0C,QAAQ,gB,cCAzBzC,EAAOD,QAAU0C,QAAQ,gB,cCAzBzC,EAAOD,QAAU0C,QAAQ,gB,gBCAzBzC,EAAOD,QAAU,EAAQ,K,mnECAzBC,EAAOD,QAAU0C,QAAQ,W,cCAzBzC,EAAOD,QAAU0C,QAAQ,sB,cCAzBzC,EAAOD,QAAU0C,QAAQ,mB,cCAzBzC,EAAOD,QAAU0C,QAAQ,oB,cCAzBzC,EAAOD,QAAU0C,QAAQ,gB,cCAzBzC,EAAOD,QAAU0C,QAAQ,mB,cCAzBzC,EAAOD,QAAU0C,QAAQ,e,gBCGvBzC,EAAOD,QAUD,SAAU2C,IAEhB,WAEG,IAAIgB,EAAIhB,EACJiB,EAAQD,EAAEE,IACVe,EAAYhB,EAAMgB,UAClBmE,EAASnF,EAAMmF,OACfD,EAASnF,EAAEiG,KAGX8E,EAAI,GAKJuG,EAAOnM,EAAOmM,KAAOlM,EAAOhF,OAAO,CACnCkF,SAAU,WACNhF,KAAKqH,MAAQ,IAAI1G,EAAUT,KAAK,CAC5B,WAAY,WACZ,WAAY,UACZ,cAIRyE,gBAAiB,SAAU2C,EAAG5C,GAY1B,IAVA,IAAI+C,EAAIzH,KAAKqH,MAAMzG,MAGf8H,EAAIjB,EAAE,GACNkB,EAAIlB,EAAE,GACN7K,EAAI6K,EAAE,GACN5K,EAAI4K,EAAE,GACNtE,EAAIsE,EAAE,GAGDlL,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,GAAIA,EAAI,GACJkO,EAAElO,GAAqB,EAAhB+K,EAAE5C,EAASnI;IACf,CACH,IAAIyB,EAAIyM,EAAElO,EAAI,GAAKkO,EAAElO,EAAI,GAAKkO,EAAElO,EAAI,IAAMkO,EAAElO,EAAI;AAChDkO,EAAElO,GAAMyB,GAAK,EAAMA,IAAM,GAG7B,IAAIP,GAAMiL,GAAK,EAAMA,IAAM,IAAOvF,EAAIsH,EAAElO;AAEpCkB,GADAlB,EAAI,GACwB,YAArBoM,EAAI/L,GAAO+L,EAAI9L,GACfN,EAAI,GACQ,YAAboM,EAAI/L,EAAIC,GACPN,EAAI,IACJoM,EAAI/L,EAAM+L,EAAI9L,EAAMD,EAAIC,GAAM,YAE/B8L,EAAI/L,EAAIC,GAAK;AAGvBsG,EAAItG;AACJA,EAAID;AACJA,EAAK+L,GAAK,GAAOA,IAAM;AACvBA,EAAID;AACJA,EAAIjL,EAIRgK,EAAE,GAAMA,EAAE,GAAKiB,EAAK;AACpBjB,EAAE,GAAMA,EAAE,GAAKkB,EAAK;AACpBlB,EAAE,GAAMA,EAAE,GAAK7K,EAAK;AACpB6K,EAAE,GAAMA,EAAE,GAAK5K,EAAK;AACpB4K,EAAE,GAAMA,EAAE,GAAKtE,EAAK,GAGxBkC,YAAa,WAET,IAAIzB,EAAO5D,KAAKyD,MACZO,EAAYJ,EAAKhD,MAEjBoI,EAAgC,EAAnBhJ,KAAK0D,YAClBuF,EAA4B,EAAhBrF,EAAK/C;AAGrBmD,EAAUiF,IAAc,IAAM,KAAS,GAAKA,EAAY;AACxDjF,EAA4C,IAA/BiF,EAAY,KAAQ,GAAM,IAAWtK,KAAKwK,MAAMH,EAAa;AAC1EhF,EAA4C,IAA/BiF,EAAY,KAAQ,GAAM,IAAWD;AAClDpF,EAAK/C,SAA8B,EAAnBmD,EAAUlD;AAG1Bd,KAAK6D;AAGL,OAAO7D,KAAKqH,OAGhB3G,MAAO,WACH,IAAIA,EAAQoE,EAAOpE,MAAMhE,KAAKsD;AAC9BU,EAAM2G,MAAQrH,KAAKqH,MAAM3G;AAEzB,OAAOA;AAkBfhB,EAAEsR,KAAOlM,EAAOQ,cAAc0L;AAgB9BtR,EAAEuR,SAAWnM,EAAOW,kBAAkBuL,GAhI1C;AAoIA,OAAOtS,EAASsS,KAhJYlV,CAAQ,EAAQ,K,gBCA3CE,EAAOD,SAUS2C,EAVmB,EAAQ,QAcpCgB,EAAIhB,EACJiB,EAAQD,EAAEE,IACVC,EAAOF,EAAME,KACbkC,EAAQrC,EAAEsC,IACVgB,EAAOjB,EAAMiB,KACb6B,EAASnF,EAAEiG,KAKJd,EAAOa,KAAO7F,EAAKC,OAAO,CAWjCI,KAAM,SAAUqF,EAAQzH,GAEpByH,EAASvF,KAAKkR,QAAU,IAAI3L,EAAOrF;AAGjB,iBAAPpC,IACPA,EAAMkF,EAAKZ,MAAMtE;AAIrB,IAAIqT,EAAkB5L,EAAOrB,UACzBkN,EAAyC,EAAlBD;AAGvBrT,EAAI+C,SAAWuQ,IACftT,EAAMyH,EAAOJ,SAASrH;AAI1BA,EAAI0D;AAWJ,IARA,IAAI6P,EAAOrR,KAAKsR,MAAQxT,EAAI4C,QACxB6Q,EAAOvR,KAAKwR,MAAQ1T,EAAI4C,QAGxB+Q,EAAYJ,EAAKzQ,MACjB8Q,EAAYH,EAAK3Q,MAGZrE,EAAI,EAAGA,EAAI4U,EAAiB5U,IAAK,CACtCkV,EAAUlV,IAAM;AAChBmV,EAAUnV,IAAM,UAEpB8U,EAAKxQ,SAAW0Q,EAAK1Q,SAAWuQ;AAGhCpR,KAAKwD,SAUTA,MAAO,WAEH,IAAI+B,EAASvF,KAAKkR;AAGlB3L,EAAO/B;AACP+B,EAAON,OAAOjF,KAAKwR,QAevBvM,OAAQ,SAAUC,GACdlF,KAAKkR,QAAQjM,OAAOC;AAGpB,OAAOlF,MAiBXmF,SAAU,SAAUD,GAEhB,IAAIK,EAASvF,KAAKkR,QAGdS,EAAYpM,EAAOJ,SAASD;AAChCK,EAAO/B;AACP,IAAIoO,EAAOrM,EAAOJ,SAASnF,KAAKsR,MAAM5Q,QAAQQ,OAAOyQ;AAErD,OAAOC;AAxIlB,IAagBlT,EAITgB,EACAC,EACAE,EACAkC,EACAiB,EACA6B,G,gBCnBP7I,EAAOD,SAUS2C,EAVmB,EAAQ,GAAW,EAAQ,SAe/DA,EAASkB,IAAIqP,SAELvP,EAAIhB,EACJiB,EAAQD,EAAEE,IACVC,EAAOF,EAAME,KACbc,EAAYhB,EAAMgB,UAClB4C,EAAyB5D,EAAM4D,uBAC/BxB,EAAQrC,EAAEsC,IAEV4D,GADO7D,EAAMiB,KACJjB,EAAM6D,QACff,EAASnF,EAAEiG,KACX6D,EAAS3E,EAAO2E,OAUhByF,EAAStP,EAAMsP,OAAS1L,EAAuBzD,OAAO,CAMtDiF,IAAKlF,EAAKC,SAgBV+R,gBAAiB,SAAU/T,EAAKiH,GAC5B,OAAO/E,KAAKnC,OAAOmC,KAAK8R,gBAAiBhU,EAAKiH,IAiBlDgN,gBAAiB,SAAUjU,EAAKiH,GAC5B,OAAO/E,KAAKnC,OAAOmC,KAAKgS,gBAAiBlU,EAAKiH,IAclD7E,KAAM,SAAU+R,EAAWnU,EAAKiH,GAE5B/E,KAAK+E,IAAM/E,KAAK+E,IAAIjF,OAAOiF;AAG3B/E,KAAKkS,WAAaD;AAClBjS,KAAK6M,KAAO/O;AAGZkC,KAAKwD,SAUTA,MAAO,WAEHD,EAAuBC,MAAM9G,KAAKsD;AAGlCA,KAAKgF,YAeTmN,QAAS,SAAUC,GAEfpS,KAAK2D,QAAQyO;AAGb,OAAOpS,KAAK6D,YAiBhBsB,SAAU,SAAUiN,GAEZA,GACApS,KAAK2D,QAAQyO;AAIjB,IAAIC,EAAqBrS,KAAKqF;AAE9B,OAAOgN,GAGX5I,QAAS,EAET6I,OAAQ,EAERR,gBAAiB,EAEjBE,gBAAiB,EAejB1M,cAAgB,WACZ,SAASiN,qBAAqBzU,GAC1B,MAAkB,iBAAPA,EACA0U,EAEAC,EAIf,OAAO,SAAUC,GACb,MAAO,CACHC,QAAS,SAAUnN,EAAS1H,EAAKiH,GAC7B,OAAOwN,qBAAqBzU,GAAK6U,QAAQD,EAAQlN,EAAS1H,EAAKiH,IAGnE6N,QAAS,SAAUC,EAAY/U,EAAKiH,GAChC,OAAOwN,qBAAqBzU,GAAK8U,QAAQF,EAAQG,EAAY/U,EAAKiH,MAhBnE,KA0Cf+N,GAdenT,EAAMoT,aAAe9D,EAAOnP,OAAO,CAClDuF,YAAa,WAET,IAAI2N,EAAuBhT,KAAK6D,UAAS;AAEzC,OAAOmP,GAGX9O,UAAW,IAMFxE,EAAEhC,KAAO,IAKlBuV,EAAkBtT,EAAMsT,gBAAkBpT,EAAKC,OAAO,CAatD+R,gBAAiB,SAAUa,EAAQQ,GAC/B,OAAOlT,KAAKmT,UAAUtV,OAAO6U,EAAQQ,IAezCnB,gBAAiB,SAAUW,EAAQQ,GAC/B,OAAOlT,KAAKoT,UAAUvV,OAAO6U,EAAQQ,IAazChT,KAAM,SAAUwS,EAAQQ,GACpBlT,KAAKqT,QAAUX;AACf1S,KAAKsT,IAAMJ,KAOfK,EAAMT,EAAOS,IAAO,WAIpB,IAAIA,EAAMN,EAAgBnT;AAK1ByT,EAAIJ,UAAYI,EAAIzT,OAAO,CAWvB0T,aAAc,SAAU5S,EAAO8D,GAE3B,IAAIgO,EAAS1S,KAAKqT,QACdnP,EAAYwO,EAAOxO;AAGvBuP,SAAS/W,KAAKsD,KAAMY,EAAO8D,EAAQR;AACnCwO,EAAOnF,aAAa3M,EAAO8D;AAG3B1E,KAAK0T,WAAa9S,EAAMe,MAAM+C,EAAQA,EAASR;AAOvDqP,EAAIH,UAAYG,EAAIzT,OAAO,CAWvB0T,aAAc,SAAU5S,EAAO8D,GAE3B,IAAIgO,EAAS1S,KAAKqT,QACdnP,EAAYwO,EAAOxO,UAGnByP,EAAY/S,EAAMe,MAAM+C,EAAQA,EAASR;AAG7CwO,EAAOjF,aAAa7M,EAAO8D;AAC3B+O,SAAS/W,KAAKsD,KAAMY,EAAO8D,EAAQR;AAGnClE,KAAK0T,WAAaC;AAI1B,SAASF,SAAS7S,EAAO8D,EAAQR,GAC7B,IAAI4F,EAGAoJ,EAAKlT,KAAKsT;AAGd,GAAIJ,EAAI,CACJpJ,EAAQoJ;AAGRlT,KAAKsT,SAzVE,OA2VPxJ,EAAQ9J,KAAK0T;AAIjB,IAAK,IAAInX,EAAI,EAAGA,EAAI2H,EAAW3H,IAC3BqE,EAAM8D,EAASnI,IAAMuN,EAAMvN,GAInC,OAAOgX,EAvFY,GA6FnBK,EAAQlU,EAAEmU,IAAM,GAKhBC,EAAQF,EAAME,MAAQ,CAatBD,IAAK,SAAUjQ,EAAMM,GAYjB,IAVA,IAAIC,EAA6B,EAAZD,EAGjB6P,EAAgB5P,EAAiBP,EAAK/C,SAAWsD,EAGjD6P,EAAeD,GAAiB,GAAOA,GAAiB,GAAOA,GAAiB,EAAKA,EAGrFE,EAAe,GACV1X,EAAI,EAAGA,EAAIwX,EAAexX,GAAK,EACpC0X,EAAanS,KAAKkS;AAEtB,IAAIE,EAAUvT,EAAU9C,OAAOoW,EAAcF;AAG7CnQ,EAAK1C,OAAOgT,IAchBC,MAAO,SAAUvQ,GAEb,IAAImQ,EAAwD,IAAxCnQ,EAAKhD,MAAOgD,EAAK/C,SAAW,IAAO;AAGvD+C,EAAK/C,UAAYkT,IA6FrBK,GApFczU,EAAM8L,YAAcwD,EAAOnP,OAAO,CAOhDiF,IAAKkK,EAAOlK,IAAIjF,OAAO,CACnBpC,KAAM6V,EACNW,QAASJ,IAGbtQ,MAAO,WACH,IAAI6Q;AAGJpF,EAAOzL,MAAM9G,KAAKsD;AAGlB,IAAI+E,EAAM/E,KAAK+E,IACXmO,EAAKnO,EAAImO,GACTxV,EAAOqH,EAAIrH;AAGf,GAAIsC,KAAKkS,YAAclS,KAAK8R,gBACxBuC,EAAc3W,EAAKmU;IACmC,CACtDwC,EAAc3W,EAAKqU;AAEnB/R,KAAKsE,eAAiB,EAG1B,GAAItE,KAAKsU,OAAStU,KAAKsU,MAAMC,WAAaF,EACtCrU,KAAKsU,MAAMpU,KAAKF,KAAMkT,GAAMA,EAAGtS;IAC5B,CACHZ,KAAKsU,MAAQD,EAAY3X,KAAKgB,EAAMsC,KAAMkT,GAAMA,EAAGtS;AACnDZ,KAAKsU,MAAMC,UAAYF,IAI/B1P,gBAAiB,SAAU/D,EAAO8D,GAC9B1E,KAAKsU,MAAMd,aAAa5S,EAAO8D,IAGnCW,YAAa,WACT,IAAI2N,EAGAkB,EAAUlU,KAAK+E,IAAImP;AAGvB,GAAIlU,KAAKkS,YAAclS,KAAK8R,gBAAiB,CAEzCoC,EAAQL,IAAI7T,KAAKyD,MAAOzD,KAAKkE;AAG7B8O,EAAuBhT,KAAK6D,UAAS,OACiB,CAEtDmP,EAAuBhT,KAAK6D,UAAS;AAGrCqQ,EAAQC,MAAMnB,GAGlB,OAAOA,GAGX9O,UAAW,IAgBIvE,EAAMyU,aAAevU,EAAKC,OAAO,CAoBhDI,KAAM,SAAUsU,GACZxU,KAAKC,MAAMuU,IAkBf/T,SAAU,SAAUgU,GAChB,OAAQA,GAAazU,KAAKyU,WAAWxT,UAAUjB,UAOnD0U,EAAWhV,EAAEiV,OAAS,GAKtBC,EAAmBF,EAASG,QAAU,CActC5T,UAAW,SAAUuT,GACjB,IAAIrT,EAGA0R,EAAa2B,EAAa3B,WAC1BhJ,EAAO2K,EAAa3K;AAIpB1I,EADA0I,EACYlJ,EAAU9C,OAAO,CAAC,WAAY,aAAaqD,OAAO2I,GAAM3I,OAAO2R,GAE/DA;AAGhB,OAAO1R,EAAUV,SAASmF,IAgB9BxD,MAAO,SAAU0S,GACb,IAAIjL,EAGAgJ,EAAajN,EAAOxD,MAAM0S,GAG1BC,EAAkBlC,EAAWjS;AAGjC,GAA0B,YAAtBmU,EAAgB,IAA0C,YAAtBA,EAAgB,GAAkB,CAEtElL,EAAOlJ,EAAU9C,OAAOkX,EAAgBpT,MAAM,EAAG;AAGjDoT,EAAgBnQ,OAAO,EAAG;AAC1BiO,EAAWhS,UAAY,GAG3B,OAAOuT,EAAavW,OAAO,CAAEgV,WAAYA,EAAYhJ,KAAMA,MAO/D4I,EAAqB9S,EAAM8S,mBAAqB5S,EAAKC,OAAO,CAM5DiF,IAAKlF,EAAKC,OAAO,CACb6U,OAAQC,IAqBZjC,QAAS,SAAUD,EAAQlN,EAAS1H,EAAKiH,GAErCA,EAAM/E,KAAK+E,IAAIjF,OAAOiF;AAGtB,IAAIiQ,EAAYtC,EAAOb,gBAAgB/T,EAAKiH,GACxC8N,EAAamC,EAAU7P,SAASK,GAGhCyP,EAAYD,EAAUjQ;AAG1B,OAAOqP,EAAavW,OAAO,CACvBgV,WAAYA,EACZ/U,IAAKA,EACLoV,GAAI+B,EAAU/B,GACdgC,UAAWxC,EACXhV,KAAMuX,EAAUvX,KAChBwW,QAASe,EAAUf,QACnBhQ,UAAWwO,EAAOxO,UAClBuQ,UAAW1P,EAAI4P,UAqBvB/B,QAAS,SAAUF,EAAQG,EAAY/U,EAAKiH,GAExCA,EAAM/E,KAAK+E,IAAIjF,OAAOiF;AAGtB8N,EAAa7S,KAAKmV,OAAOtC,EAAY9N,EAAI4P;AAGzC,IAAIS,EAAY1C,EAAOX,gBAAgBjU,EAAKiH,GAAKI,SAAS0N,EAAWA;AAErE,OAAOuC,GAkBXD,OAAQ,SAAUtC,EAAY8B,GAC1B,MAAyB,iBAAd9B,EACA8B,EAAOvS,MAAMyQ,EAAY7S,MAEzB6S,KAQfwC,EAAQ3V,EAAE4V,IAAM,GAKhBC,EAAaF,EAAMR,QAAU,CAkB7BW,QAAS,SAAU5L,EAAUH,EAAS6I,EAAQzI,GAErCA,IACDA,EAAOlJ,EAAUiB,OAAO;AAI5B,IAAI9D,EAAM0L,EAAO3L,OAAO,CAAE4L,QAASA,EAAU6I,IAAU3I,QAAQC,EAAUC,GAGrEqJ,EAAKvS,EAAU9C,OAAOC,EAAI8C,MAAMe,MAAM8H,GAAmB,EAAT6I;AACpDxU,EAAI+C,SAAqB,EAAV4I;AAGf,OAAO2K,EAAavW,OAAO,CAAEC,IAAKA,EAAKoV,GAAIA,EAAIrJ,KAAMA,MAQzD2I,EAAsB7S,EAAM6S,oBAAsBC,EAAmB3S,OAAO,CAM5EiF,IAAK0N,EAAmB1N,IAAIjF,OAAO,CAC/BwV,IAAKC,IAoBT5C,QAAS,SAAUD,EAAQlN,EAASoE,EAAU7E,GAE1CA,EAAM/E,KAAK+E,IAAIjF,OAAOiF;AAGtB,IAAI0Q,EAAgB1Q,EAAIuQ,IAAIE,QAAQ5L,EAAU8I,EAAOjJ,QAASiJ,EAAOJ;AAGrEvN,EAAImO,GAAKuC,EAAcvC;AAGvB,IAAIL,EAAaJ,EAAmBE,QAAQjW,KAAKsD,KAAM0S,EAAQlN,EAASiQ,EAAc3X,IAAKiH;AAG3F8N,EAAW5S,MAAMwV;AAEjB,OAAO5C,GAoBXD,QAAS,SAAUF,EAAQG,EAAYjJ,EAAU7E,GAE7CA,EAAM/E,KAAK+E,IAAIjF,OAAOiF;AAGtB8N,EAAa7S,KAAKmV,OAAOtC,EAAY9N,EAAI4P;AAGzC,IAAIc,EAAgB1Q,EAAIuQ,IAAIE,QAAQ5L,EAAU8I,EAAOjJ,QAASiJ,EAAOJ,OAAQO,EAAWhJ;AAGxF9E,EAAImO,GAAKuC,EAAcvC;AAGvB,IAAIkC,EAAY3C,EAAmBG,QAAQlW,KAAKsD,KAAM0S,EAAQG,EAAY4C,EAAc3X,IAAKiH;AAE7F,OAAOqQ;AAn3BlB,IAagB1W,EAOTgB,EACAC,EACAE,EACAc,EACA4C,EACAxB,EAEA6D,EACAf,EACA2E,EAUAyF,EA+LA6D,EAKAG,EAoDAM,EA6FAK,EAKAE,EA+IAM,EA+CAM,EAKAE,EAsEAnC,EA6GA4C,EAKAE,EAwCA/C,G;;;;;;;;;;;;;;;ACjyBT,MAAMkD,EAAgD,CACpD,QAAQC,EAAKC,GACXD,EAAItX,UAAUwX,KAAOD,EAAQE;AAI1B,MAAMC,uBAGE,Q;ACRf,MAAMC,EAAQ,CACVC,OAAQC,UAAUC,OAClBC,WAAW5Y,GAEAA,EAAM6Y,QAAQ,kBAAmB,IAE5C,YACI,IAAIC,GAAc,IAAKC,MAAMC,UACzBC,EAAM9X,KAAKwK,MAAMmN,EAAc;AACnC,OAAOG,GAEXC,UAAU5Z,GACC,SAAS0C,GACZ,OAAOiB,SAAS/D,KAAK8C,KAAS,WAAa1C,EAAO,MAKjD6Z,WAAa,SAASnZ,GAC/B,MAAwB,mBAAVA,GAmBLoZ,WAAa,SAAUC,EAAQC,EAAQC,EAAW,MAC7D,MAAM,OAAEjW,GAAW+V;AACnBE,EAAuB,MAAZA,EAAmB,EAAIA;AAC9BA,EAAW,EACbA,EAAW,EAEJA,EAAWjW,IAClBiW,EAAWjW;AAEbgW,EAAS,GAAGA;AACZ,OAAOD,EAAOlV,MAAMoV,EAAUA,EAAWD,EAAOhW,SAAWgW;AAE9C;AC/CA,MAAM,gBAOjB,YAAYE,GAER,IAAIC,EAA+B,CAC/BC,OAAS,CAAC,YAAmB,SAAgB,gBAC7Cpa,KAAM,cACNqa,UAAW,UACXC,KAAM,SAENC,EAAY,IAAIJ,KAAiCD;AACrD,SAAeK,GASnB,IAAIvZ,EAAaN,EAAY8Z,EAAkCC,GAE3D,UAAgBzZ,EAAKN,GAAOga,MAAK,SAAUha,GACnCmZ,WAAWW,IACXA,EAAU9Z,MACVia,OAAM,SAAUzY,GAChB2X,WAAWY,IACXA,EAAOvY,MAUnB,IAAIlB,EAAa4Z,GAEb,UAAgB5Z,EAAK4Z,GASzB,OAAO5Z,EAAa4Z,EAAW,MAEvBA,EAEA,aAAmB5Z,EAAK4Z,GAG5B,aAAmB5Z,I;ACnEZ,MAAM6Z,8BAA8BrY,MAE/C,cAEIsY,MAAM,2ECJC,MAAMC,yBAAyBvY,MAE1C,cAEIsY,MAAM,uCCJC,MAAME,yBAAyBxY,MAE1C,cAEIsY,MAAM,iDCJC,MAAMG,mCAAmCzY,MAEpD,cAEIsY,MAAM,4DCJC,MAAMI,kCAAkC1Y,MAEnD,cAEIsY,MAAM,2GCJC,MAAMK,iCAAiC3Y,MAElD,cAEIsY,MAAM,qFCJC,MAAMM,+BAA+B5Y,MAEhD,cAEIsY,MAAM,sHCJC,MAAM,yDAA+BtY,MAEhD,cAEIsY,MAAM,yHCMd,OACIO,oBAAA,uBACAD,uBAAA,iDACAP,4CACAE,kCACAC,kCACAC,sDACAC,oDACAC;ACTY,MAAM,gBAqBjB,YAAYG,EAAiBC,EAAc,GAAIC,GAAqB,GAjBpE,KAAAC,YAAsB;AACtB,KAAAC,SAAkB;AAClB,KAAAF,WAAqB;AAErB,KAAA1U,KAAY;AACZ,KAAA6U,aAA6B;AAC7B,KAAAC,QAAkB;AAClB,KAAAC,QAAkB;AAClB,KAAAC,QAAkB;AAClB,KAAAC,mBAAoB;AAUhB7Y,KAAK8Y,eAAiBV;AACtBpY,KAAKwY,SAAWH;AAChBrY,KAAKsY,UAAYA,EASrB,gBAAgBS,GAEZ,OAAO,IAAMC,IAAID,GASrB,cAAcrB,GAEV,OAAO,IAAMuB,OAAOvB,GAQxB,wBAEI,OAAO,IAQX,KAAKwB,GAEDlZ,KAAKsY,UAAYY;AACjB,OAAOlZ,KAQX,MAAMuY,GAEFvY,KAAKuY,YAAcA;AACnB,OAAOvY,KAQX,IAAIqY,GAEArY,KAAKwY,SAAWH;AAChB,OAAOrY,KASX,UAAUlD,EAAcU,GAEpBwC,KAAK0Y,QAAQ5b,GAAQU;AACrB,OAAOwC,KAQX,MAAM2Y,EAAkB,GAEpB3Y,KAAK2Y,QAAUA;AACf,OAAO3Y,KAOX,aAEIA,KAAK6Y,mBAAoB;AACzB,OAAO7Y,KAQX,QAAQmZ,EAAsB,KAE1BnZ,KAAK4Y,QAAUO;AACf,OAAOnZ,KAOX,MAEIA,KAAKoZ,OAAS;AACd,OAAOpZ,KAAKqZ,QAOhB,OAAOzV,GAEH5D,KAAKoZ,OAAS;AACVxV,IAEA5D,KAAK4D,KAAOA;AAEhB,OAAO5D,KAAKqZ,QAQhB,IAAIzV,GAEA5D,KAAKoZ,OAAS;AACdpZ,KAAK4D,KAAOA;AACZ,OAAO5D,KAAKqZ,QAQhB,KAAKzV,GAED5D,KAAKoZ,OAAS;AACdpZ,KAAK4D,KAAOA;AACZ,OAAO5D,KAAKqZ,QAQhB,MAAMzV,GAGH5D,KAAKoZ,OAAS;AACdpZ,KAAK4D,KAAOA;AACZ,OAAO5D,KAAKqZ,QAQP,QAEJ,IAAIhB,EAAc;AACdrY,KAAKsY,WAELtY,KAAKsZ,UAAU,gBAAiB,UAAUtZ,KAAKuY;AAGpD,GAAI3B,WAAW5W,KAAKwY,SAASe,cAAe,QAExClB,EAAMrY,KAAKwY;IACR,CACH,GXrMY,SAAS3B,EAAQC,EAAQC,GAC3C,MAAM,OAAEjW,GAAW+V;AACvBE,OAAwBnY,IAAbmY,EAAyBjW,GAAUiW;AAC1CA,EAAW,GAAKA,GAAYA,EAC9BA,EAAW,EAEJA,EAAWjW,IAClBiW,EAAWjW;AAEb,MAAM0Y,EAAMzC;AACZA,GAAYD,EAAOhW;AACnB,OAAOiW,GAAY,GAAKF,EAAOlV,MAAMoV,EAAUyC,IAAQ1C,EW0LzC2C,CAASzZ,KAAK8Y,eAAgB,KAE9B,MAAM,IAAIY,EAAO1B;AAErB,IAAKpB,WAAW5W,KAAKwY,SAAU,KAE3B,MAAM,IAAIkB,EAAO3B;AAErBM,EAAMrY,KAAK8Y,eAAiB9Y,KAAKwY,SAErC,IAAIxB,EAAS,CACTqB,IAAKA,EACLe,OAAQpZ,KAAKoZ,OACbV,QAAS1Y,KAAK0Y,QACdD,aAAczY,KAAKyY,aACnBkB,QAAS3Z,KAAK4Y,QACdhV,KAAMgW,KAAK3Y,UAAUjB,KAAK4D,OAE1BiW,EAAK,IAAMhc,OAAOmZ;AAEtB,IAAI8C,eAAiB,SAAUC,GAE3B,IAAIC,EAAaD,EAAME,SAAiCF,EAAME,SAASC,OAAtCH,EAAMI,QAAQD;AAC/ClD,EAAgB,QAAIA,EAAgB,QAAI;AACxC,OAAkB,MAAdgD,GAAqBhD,EAAgB,QAAI,EAElC6C,EAAGM,QAAQnD,GAEfoD,QAAQC,OAAON;AAE1BF,EAAGS,aAAaL,SAASM,SAAI3b,EAAWkb;AACxCD,EAAGS,aAAaH,QAAQI,SAAI3b,EAAWkb;AACvC,GAAI9Z,KAAK6Y,kBACT,CACI,IAAI2B,0BAA4B,SAASC,GAGrC,IADA,IAAIC,EAAUC,SAASC,iBAAiB,oFAChCre,EAAI,EAAGse,EAAMH,EAAQ5Z,OAAQvE,EAAIse,EAAKte,IAE1Cme,EAAQne,GAAa,SAAIke;AAGjCZ,EAAGS,aAAaH,QAAQI,KAAI,SAAUvD,GAClCwD,2BAA0B;AAC1B,OAAOxD,KACR,SAAU+C,GACTS,2BAA0B;AAC1B,OAAOJ,QAAQC,OAAON;AAE1BF,EAAGS,aAAaL,SAASM,KAAI,SAAUN,GACnCO,2BAA0B;AAC1B,OAAOP,KACR,SAAUF,GACTS,2BAA0B;AAC1B,OAAOJ,QAAQC,OAAON,MAI9B/C,EAAgB,QAvCNhX,KAuCe2Y;AACzB,OAAOkB,EAAGM,QAAQnD,ICvRX,MAAM,kBAMjB,YAAY8D,EAAUC,GAkBtB,KAAAC,OAAUC,GAEC,kBAASC,kBAAkBlb,KAAKmb,KAAMF;AAlB7C,IAAIG,EAAgBN,EAAI9D,OAAOmE,KAAKC,cAChCC,EAAiBP,EAAI9D,OAAOmE,KAAKE;AACjCD,GAEsB,SAAlBA,IAEAA,EAAgBlF,UAAUoF,SAASC,MAAM,KAAK;AAGtDvb,KAAKmb,KAAO,IAAI,IAAQ,CACpBH,OAAQI,EACRC,eAAgBA,EAChBN,aAcA,iBAAkBI,EAAeK,GAErCL,EAAKH,OAASQ;AACd,EAAA9S,EAAM+S,SAAS/C,QAAQgD,OAAO,mBAAqBF;AACnD,GAAIb,SAASgB,cAAc,QAC3B,CACI,MAAMC,EAAWjB,SAASgB,cAAc;AACxCC,EAASC,aAAa,OAAQL,IAK9B,+BAA+BL,EAAeK,EAAO,MAEvD,GAAIL,EAAKH,SAAWQ,EAGhB,OAAOpB,QAAQ0B;AAEnB,GAAI,kBAASC,gBAAgBC,SAASR,GACtC,CAGI,kBAASS,UAAUd,EAAMK;AACzB,OAAOpB,QAAQ0B,UAInB,aAAa,EAAApT,EAAMtL,IAAI,SAASoe,UAAahE,MAAK,SAASyC,GACzDkB,EAAKe,iBAAiBV,EAAMvB,EAASrW,KAAK4X;AAC1C,kBAASO,gBAAgBja,KAAK0Z;AAC9B,OAAO,kBAASS,UAAUd,EAAMK,OA9DjC,kBAAAO,gBAAiC,CAAC;ACc7B,MAAM,QAoBjB,YAAY/E,EAAamF,GAhBzB,KAAAC,OAAiB;AACjB,KAAAC,iBAA2B;AAC3B,KAAAC,eAA0C;AAG1C,KAAAC,SAAgB;AAChB,KAAAC,qBAA4B;AAYnBL,EAAWM,gBAGZN,EAAWM,cAAgB;AAE1BN,EAAWO,aAGZP,EAAWO,WAAa;AAE5B1c,KAAKgX,OAASA;AACdhX,KAAK2c,QAAU,IAAI,gBAAQ3F,EAAO2F;AAClC3c,KAAK4c,aAAaT,EAAWU,OAAQV,EAAWM;AAChD,IAAIlC,IAAI;AACR,GAAI4B,EAAWW,oBACf,CACI,IAAIvC,IAAI;AACRva,KAAKsb,SAAW,IAAI,kBAAStb,KAAMmc,EAAWW,qBAE/CX,EAAWO,YAEVP,EAAWO,WAAWK,SAAQ,SAASC,EAAQC,EAAOC,GAClD,IAAI3C,IAAIyC,MAaZ,aAAaH,EAA4BJ,GAE7C,IAAIlC,IAAI;AACHkC,IAEDA,EAAgB;AAEpB,IAAIU;AACJ,IAAKnd,KAAKgX,OAAOmG,WAEb,MAAM,IAAIzD,EAAO/B;AAErBwF,EAAand,KAAKgX,OAAOmG;AACzB,IAAKN,EAED,MAAM,IAAInD,EAAO5B;AAErB,MAAMsF,EAA8C,CAChD1f,KAAMyf,EACNN,OAAQA,GAGNQ,EAAsB,IAAID,KAAiCX;AACjEzc,KAAKsd,QAAU,IAAI,IAAUD,GAQzB,qBAEJ,IAAK,IAAI3F,KAAY1X,KAAKsc,eAWtB5E,EAAS1X;AAEbA,KAAKoc,OAAQ,EASjB,IAAImB,EAAmBC,EAAe,IAGlCxd,KAAKma,QAAU,IAAI,gBAAQna,KAAKgX,OAAOyG;AACvC,IAAIlD,IAAI,EAAU,CAAEzE,YAAa9V;AACjC,IAAI0d;AACJ,IAAK1d,KAAKgX,OAAO0G,QAEb,MAAM,IAAIhE,EAAO7B;AAErB6F,EAAU1d,KAAKgX,OAAO0G;AAGtB,MAAMC,EAAa,CACfC,OAAQ5d,KAAKsd,QACbC,MAAOA;AAIPvd,KAAKsb,WAELqC,EAAiB,KAAI3d,KAAKsb,SAASH;AAEvCle,OAAO4gB,OAAO,GAAIF,EAAYH;AAE9B,MAAMM,EAAmB,IAAIH,KAAeH;AAG5C,IAAI,IAAIM,GAAkBC,OAAO,IAAIL;AAGrC1d,KAAKge,qBAST,GAAGlhB,EAAc8G,EAAY,IAEzB5D,KAAKsd,QAAQxb,KAAK,CAAEhF,KAAMA,EAAMmhB,OAAQra,IAQ5C,cAAc8T,GAEV1X,KAAKsc,eAAexa,KAAK4V,I,4BCxLnB,IAAW,KCAX,IAAa,OCAb,IAAY,MCAZ,IAAW,KCAX,IAAc,QCAd,IAAY,MCQ3B,GACIwG,UAAA,IACAC,KAAA,EACAC,OAAA,EACAC,MAAA,EACAC,KAAA,EACAC,QAAA,EACAC,MAAA,G;;;;ACcJ,IAAM,EAAN,MAAMC,aAAa,IAEf;AAFE,EAAI,YADTC,EAAWR,UAAU,KAChB;AAaN,IAAIS,EAAiB,CACjBC,MAAO,GACP,UAEIjE,SAASkE,eAAe7e,KAAK6V,KAAKmB,OAAO0G,SAASoB,WAAa,IAAI9e,KAAK+e,0BAE5E,UAEI/e,KAAK6V,KAAKwG,iBAAkB,GA3CpC,MAAM,gBAQF,iBAAiB2C,GAETrI,WAAWqI,EAAK5C,QAEhB4C,EAAK5C,WAgCE6C,UAAUjf,QAId,IAAKF,OAAO,CAAEof,OAAQ,CAACP,K;;;;AC/CtC,IAAM,EAAN,MAAMQ,cAAc,IAEhB;AAFE,EAAK,gBADVT,EAAWR,UAAU,KAChB;AAaN,IAAI,EAAiB,CACjBU,MAAO,GACPQ,QAAS,WACDzI,WAAW3W,KAAKoc,QAEhBpc,KAAKoc,UAKF,IAAMtc,OAAO,CAAEof,OAAQ,CAAC,K;ACpBxB,MAAM,kBAIjB,YAAYpJ,GAER,IAAKA,EAAYkB,OAAOqI,SAEpB,MAAM,IAAI3F,EAAOvB;AAErB,IAAKrC,EAAYkB,OAAOqI,SAASvhB,IAE7B,MAAM,IAAI4b,EAAOxB;AAErBlY,KAAKlC,IAAMgY,EAAYkB,OAAOqI,SAASvhB,IAG3C,QAAQwhB,GAEJ,OAAO,kBAASC,OAAOvQ,IAAI2D,QAAQ2M,EAAMtf,KAAKlC,KAGlD,QAAQ0hB,GAEJ,OAAO,kBAASD,OAAOvQ,IAAI4D,QAAQ4M,EAAexf,KAAKlC,MAKpD,kBAAA8Q,OAAS,CACZ6Q,OAAQ,IACRC,IAAK;AAEF,kBAAAC,SAAW,CACdC,OAAQ,IACRC,KAAM;AAEH,kBAAAC,SAAW,CACdF,OAAQ,IACRC,KAAM;AAEH,kBAAAnT,IAAM;AACN,kBAAA6S,OAAS,CACZK,OAAQ,CACJG,OAAOT,GACI,kBAASK,SAASC,OAAO3e,UAAU,kBAAS0e,SAASE,KAAKzd,MAAMkd,IAE3EU,OAAOC,GACI,kBAASN,SAASC,OAAOxd,MAAM6d,GAAYxf,SAAS,kBAASkf,SAASE,OAGrF7Q,IAAK,CACD,QAAQsQ,EAAcxhB,GAClB,IACI,OAAOwF,mBAAmB,kBAASic,OAAOK,OAAOG,OAAO,kBAASrT,IAAIiG,QAAQ2M,EAAMxhB,GAAK2C,aAC1F,MAAMsZ,GAEJ,OAAO,IAGf,QAAQuF,EAAcxhB,GAClB,IACI,OAAO,kBAAS4O,IAAIkG,QAAQ,kBAAS2M,OAAOK,OAAOI,OAAO/c,mBAAmBqc,IAAQxhB,GAAK2C,SAAS,kBAASkf,SAASE,MACvH,MAAM9F,GAEJ,OAAO;;ACtEZ,MAAM,mBAQT,qBAAqBjE,EAAmB,MAE5C,IAAIoK,EAAa;AACjB,IACIA,EAAapK,EAAYkB,OAAOmJ,SAASC,KAAKzL,OAChD,MAAOxR,GACL+c,EAAa,aAEjB,OAAOA,EASH,qBAAqBpK,EAAmB,MAE5C,IAAIuK,EAAa;AACjB,IACIA,EAAavK,EAAYkB,OAAOmJ,SAASG,KAAK3L,OAChD,MAAOxR,GACLkd,EAAa,MAEjB,OAAOA,EAUX,cAAcE,EAA+B,KAAM5L,EAAiB,MAE3DA,IAEDA,EAAS,GAAG,mBAAS6L,mBAAmB,mBAASC;AAEhDF,IAEDA,EAAW,IAAIhK;AAEd5B,IAEDA,EAAS;AAEb,OAAO,IAAO4L,EAAU5L,GAS5B,YAAY4L,EAA+B,MAEvC,OAAO,mBAASG,OAAOH,GAAU5L,OAAO,mBAAS6L,iBASrD,YAAYD,EAA+B,MAEvC,OAAO,mBAASG,OAAOH,GAAU5L,OAAO,mBAAS8L,kBCjFzD,OACIE,MAAA,EACAC,QAAA,gBACAC,SAAA;ACFW,MAAMxC,MAKjB,YAAY1B,GAHZ,KAAAmE,SAAmB;AACnB,KAAAC,UAAqB;AAGjB/gB,KAAK+gB,UAAYpE,EAGrB,IAAIxe,GAEA,IAAI6iB,EAAQhhB;AACZ/C,OAAO0R,KAAKxQ,GAAQ0H,KAAI,SAAU/H,EAAKmf,GAC/Bnf,KAAOkjB,IAEPA,EAAMljB,GAAOK,EAAOL,OAKhC,KAAKwZ,EAAmC,KAAMC,EAAgC,KAAMoF,EAAmB3c,KAAK+gB,WAExGpE,EAAQsE,IAAIjhB,KAAK8gB,SAAU9gB,KAAMsX,EAAWC,GAGhD,KAAKG,EAAeiF,EAAmB3c,KAAK+gB,WAExC,IAAIG,EAAOlhB;AACX2c,EAAQvf,IAAI4C,KAAK8gB,UAAU,SAAU/G,EAAOvc,GAEpCA,GAEA0jB,EAAKrb,IAAIrI;AAGTka,GAEA,IAAIA,EAASwJ,EAAM1jB,MAK/B,OAAOka,EAAgB,KAAMiF,EAAmB3c,KAAK+gB,WAEjDpE,EAAQwE,OAAOnhB,KAAK8gB,UAAU,WACtBpJ,GAEA,IAAIA,MCjDpB,OACI2G,YACA+C,UCAW,MAAM,6BAAkB/C,MAAvC,c;AAEI,KAAAyC,SAAsB;AACtB,KAAAO,MAAsB;AACtB,KAAAC,UAAsB;AACtB,KAAAC,SAAsB;AACtB,KAAAC,MAAsB,M,QCVX,GACXC,sBCDW,CAACC,EAAWC,EAAaC,KAEpCjH,SAASkH,MAAQH,EAAGI,KAAKD;AACzBD;ACyBW","file":"everflow.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"everflow\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"everflow\"] = factory();\n\telse\n\t\troot[\"everflow\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","module.exports = require(\"vue-property-decorator\");","module.exports = require(\"vue\");",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }())\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));","module.exports = require(\"localforage\");","module.exports = require(\"axios\");","module.exports = require(\"vue-router\");","module.exports = require(\"vue-i18n\");",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              var bitsCombined = bits1 | bits2;\n\t              words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working varialbes\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS.enc.Utf8;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var MD5 = C_algo.MD5;\n\n\t    /**\n\t     * This key derivation function is meant to conform with EVP_BytesToKey.\n\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t     */\n\t    var EvpKDF = C_algo.EvpKDF = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: MD5,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Derives a key from a password.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            var block;\n\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init hasher\n\t            var hasher = cfg.hasher.create();\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                if (block) {\n\t                    hasher.update(block);\n\t                }\n\t                block = hasher.update(password).finalize(salt);\n\t                hasher.reset();\n\n\t                // Iterations\n\t                for (var i = 1; i < iterations; i++) {\n\t                    block = hasher.finalize(block);\n\t                    hasher.reset();\n\t                }\n\n\t                derivedKey.concat(block);\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Derives a key from a password.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.EvpKDF(password, salt);\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.EvpKDF = function (password, salt, cfg) {\n\t        return EvpKDF.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.EvpKDF;\n\n}));","module.exports = require(\"vuex\");","module.exports = require(\"vue-class-component\");",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Lookup tables\n\t    var SBOX = [];\n\t    var INV_SBOX = [];\n\t    var SUB_MIX_0 = [];\n\t    var SUB_MIX_1 = [];\n\t    var SUB_MIX_2 = [];\n\t    var SUB_MIX_3 = [];\n\t    var INV_SUB_MIX_0 = [];\n\t    var INV_SUB_MIX_1 = [];\n\t    var INV_SUB_MIX_2 = [];\n\t    var INV_SUB_MIX_3 = [];\n\n\t    // Compute lookup tables\n\t    (function () {\n\t        // Compute double table\n\t        var d = [];\n\t        for (var i = 0; i < 256; i++) {\n\t            if (i < 128) {\n\t                d[i] = i << 1;\n\t            } else {\n\t                d[i] = (i << 1) ^ 0x11b;\n\t            }\n\t        }\n\n\t        // Walk GF(2^8)\n\t        var x = 0;\n\t        var xi = 0;\n\t        for (var i = 0; i < 256; i++) {\n\t            // Compute sbox\n\t            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n\t            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n\t            SBOX[x] = sx;\n\t            INV_SBOX[sx] = x;\n\n\t            // Compute multiplication\n\t            var x2 = d[x];\n\t            var x4 = d[x2];\n\t            var x8 = d[x4];\n\n\t            // Compute sub bytes, mix columns tables\n\t            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n\t            SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n\t            SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n\t            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);\n\t            SUB_MIX_3[x] = t;\n\n\t            // Compute inv sub bytes, inv mix columns tables\n\t            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n\t            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n\t            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n\t            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);\n\t            INV_SUB_MIX_3[sx] = t;\n\n\t            // Compute next counter\n\t            if (!x) {\n\t                x = xi = 1;\n\t            } else {\n\t                x = x2 ^ d[d[d[x8 ^ x2]]];\n\t                xi ^= d[d[xi]];\n\t            }\n\t        }\n\t    }());\n\n\t    // Precomputed Rcon lookup\n\t    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n\t    /**\n\t     * AES block cipher algorithm.\n\t     */\n\t    var AES = C_algo.AES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            var t;\n\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._nRounds && this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            // Compute number of rounds\n\t            var nRounds = this._nRounds = keySize + 6;\n\n\t            // Compute number of key schedule rows\n\t            var ksRows = (nRounds + 1) * 4;\n\n\t            // Compute key schedule\n\t            var keySchedule = this._keySchedule = [];\n\t            for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n\t                if (ksRow < keySize) {\n\t                    keySchedule[ksRow] = keyWords[ksRow];\n\t                } else {\n\t                    t = keySchedule[ksRow - 1];\n\n\t                    if (!(ksRow % keySize)) {\n\t                        // Rot word\n\t                        t = (t << 8) | (t >>> 24);\n\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\n\t                        // Mix Rcon\n\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;\n\t                    } else if (keySize > 6 && ksRow % keySize == 4) {\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t                    }\n\n\t                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n\t                }\n\t            }\n\n\t            // Compute inv key schedule\n\t            var invKeySchedule = this._invKeySchedule = [];\n\t            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t                var ksRow = ksRows - invKsRow;\n\n\t                if (invKsRow % 4) {\n\t                    var t = keySchedule[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 4];\n\t                }\n\n\t                if (invKsRow < 4 || ksRow <= 4) {\n\t                    invKeySchedule[invKsRow] = t;\n\t                } else {\n\t                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n\t                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n\t                }\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            // Swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\n\t            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\n\t            // Inv swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\t        },\n\n\t        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n\t            // Shortcut\n\t            var nRounds = this._nRounds;\n\n\t            // Get input, add round key\n\t            var s0 = M[offset]     ^ keySchedule[0];\n\t            var s1 = M[offset + 1] ^ keySchedule[1];\n\t            var s2 = M[offset + 2] ^ keySchedule[2];\n\t            var s3 = M[offset + 3] ^ keySchedule[3];\n\n\t            // Key schedule row counter\n\t            var ksRow = 4;\n\n\t            // Rounds\n\t            for (var round = 1; round < nRounds; round++) {\n\t                // Shift rows, sub bytes, mix columns, add round key\n\t                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n\t                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n\t                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n\t                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\n\t                // Update state\n\t                s0 = t0;\n\t                s1 = t1;\n\t                s2 = t2;\n\t                s3 = t3;\n\t            }\n\n\t            // Shift rows, sub bytes, add round key\n\t            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\n\t            // Set output\n\t            M[offset]     = t0;\n\t            M[offset + 1] = t1;\n\t            M[offset + 2] = t2;\n\t            M[offset + 3] = t3;\n\t        },\n\n\t        keySize: 256/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.AES = BlockCipher._createHelper(AES);\n\t}());\n\n\n\treturn CryptoJS.AES;\n\n}));","module.exports = require(\"moment\");","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict'\n\nexports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')\nexports.createHash = exports.Hash = require('create-hash')\nexports.createHmac = exports.Hmac = require('create-hmac')\n\nvar algos = require('browserify-sign/algos')\nvar algoKeys = Object.keys(algos)\nvar hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)\nexports.getHashes = function () {\n  return hashes\n}\n\nvar p = require('pbkdf2')\nexports.pbkdf2 = p.pbkdf2\nexports.pbkdf2Sync = p.pbkdf2Sync\n\nvar aes = require('browserify-cipher')\n\nexports.Cipher = aes.Cipher\nexports.createCipher = aes.createCipher\nexports.Cipheriv = aes.Cipheriv\nexports.createCipheriv = aes.createCipheriv\nexports.Decipher = aes.Decipher\nexports.createDecipher = aes.createDecipher\nexports.Decipheriv = aes.Decipheriv\nexports.createDecipheriv = aes.createDecipheriv\nexports.getCiphers = aes.getCiphers\nexports.listCiphers = aes.listCiphers\n\nvar dh = require('diffie-hellman')\n\nexports.DiffieHellmanGroup = dh.DiffieHellmanGroup\nexports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup\nexports.getDiffieHellman = dh.getDiffieHellman\nexports.createDiffieHellman = dh.createDiffieHellman\nexports.DiffieHellman = dh.DiffieHellman\n\nvar sign = require('browserify-sign')\n\nexports.createSign = sign.createSign\nexports.Sign = sign.Sign\nexports.createVerify = sign.createVerify\nexports.Verify = sign.Verify\n\nexports.createECDH = require('create-ecdh')\n\nvar publicEncrypt = require('public-encrypt')\n\nexports.publicEncrypt = publicEncrypt.publicEncrypt\nexports.privateEncrypt = publicEncrypt.privateEncrypt\nexports.publicDecrypt = publicEncrypt.publicDecrypt\nexports.privateDecrypt = publicEncrypt.privateDecrypt\n\n// the least I can do is make error messages for the rest of the node.js/crypto api.\n// ;[\n//   'createCredentials'\n// ].forEach(function (name) {\n//   exports[name] = function () {\n//     throw new Error([\n//       'sorry, ' + name + ' is not implemented yet',\n//       'we accept pull requests',\n//       'https://github.com/crypto-browserify/crypto-browserify'\n//     ].join('\\n'))\n//   }\n// })\n\nvar rf = require('randomfill')\n\nexports.randomFill = rf.randomFill\nexports.randomFillSync = rf.randomFillSync\n\nexports.createCredentials = function () {\n  throw new Error([\n    'sorry, createCredentials is not implemented yet',\n    'we accept pull requests',\n    'https://github.com/crypto-browserify/crypto-browserify'\n  ].join('\\n'))\n}\n\nexports.constants = {\n  'DH_CHECK_P_NOT_SAFE_PRIME': 2,\n  'DH_CHECK_P_NOT_PRIME': 1,\n  'DH_UNABLE_TO_CHECK_GENERATOR': 4,\n  'DH_NOT_SUITABLE_GENERATOR': 8,\n  'NPN_ENABLED': 1,\n  'ALPN_ENABLED': 1,\n  'RSA_PKCS1_PADDING': 1,\n  'RSA_SSLV23_PADDING': 2,\n  'RSA_NO_PADDING': 3,\n  'RSA_PKCS1_OAEP_PADDING': 4,\n  'RSA_X931_PADDING': 5,\n  'RSA_PKCS1_PSS_PADDING': 6,\n  'POINT_CONVERSION_COMPRESSED': 2,\n  'POINT_CONVERSION_UNCOMPRESSED': 4,\n  'POINT_CONVERSION_HYBRID': 6\n}\n","module.exports = require(\"randombytes\");","module.exports = require(\"create-hash\");","module.exports = require(\"create-hmac\");","module.exports = require('./browser/algorithms.json')\n","module.exports = require(\"pbkdf2\");","module.exports = require(\"browserify-cipher\");","module.exports = require(\"diffie-hellman\");","module.exports = require(\"browserify-sign\");","module.exports = require(\"create-ecdh\");","module.exports = require(\"public-encrypt\");","module.exports = require(\"randomfill\");",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./evpkdf\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./evpkdf\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher core components.\n\t */\n\tCryptoJS.lib.Cipher || (function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var Base64 = C_enc.Base64;\n\t    var C_algo = C.algo;\n\t    var EvpKDF = C_algo.EvpKDF;\n\n\t    /**\n\t     * Abstract base cipher template.\n\t     *\n\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t     */\n\t    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {WordArray} iv The IV to use for this operation.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Creates this cipher in encryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createEncryptor: function (key, cfg) {\n\t            return this.create(this._ENC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Creates this cipher in decryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createDecryptor: function (key, cfg) {\n\t            return this.create(this._DEC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created cipher.\n\t         *\n\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t         */\n\t        init: function (xformMode, key, cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Store transform mode and key\n\t            this._xformMode = xformMode;\n\t            this._key = key;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this cipher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     cipher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-cipher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Adds data to be encrypted or decrypted.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.process('data');\n\t         *     var encrypted = cipher.process(wordArray);\n\t         */\n\t        process: function (dataUpdate) {\n\t            // Append\n\t            this._append(dataUpdate);\n\n\t            // Process available blocks\n\t            return this._process();\n\t        },\n\n\t        /**\n\t         * Finalizes the encryption or decryption process.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after final processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.finalize();\n\t         *     var encrypted = cipher.finalize('data');\n\t         *     var encrypted = cipher.finalize(wordArray);\n\t         */\n\t        finalize: function (dataUpdate) {\n\t            // Final data update\n\t            if (dataUpdate) {\n\t                this._append(dataUpdate);\n\t            }\n\n\t            // Perform concrete-cipher logic\n\t            var finalProcessedData = this._doFinalize();\n\n\t            return finalProcessedData;\n\t        },\n\n\t        keySize: 128/32,\n\n\t        ivSize: 128/32,\n\n\t        _ENC_XFORM_MODE: 1,\n\n\t        _DEC_XFORM_MODE: 2,\n\n\t        /**\n\t         * Creates shortcut functions to a cipher's object interface.\n\t         *\n\t         * @param {Cipher} cipher The cipher to create a helper for.\n\t         *\n\t         * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t         */\n\t        _createHelper: (function () {\n\t            function selectCipherStrategy(key) {\n\t                if (typeof key == 'string') {\n\t                    return PasswordBasedCipher;\n\t                } else {\n\t                    return SerializableCipher;\n\t                }\n\t            }\n\n\t            return function (cipher) {\n\t                return {\n\t                    encrypt: function (message, key, cfg) {\n\t                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n\t                    },\n\n\t                    decrypt: function (ciphertext, key, cfg) {\n\t                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n\t                    }\n\t                };\n\t            };\n\t        }())\n\t    });\n\n\t    /**\n\t     * Abstract base stream cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t     */\n\t    var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n\t        _doFinalize: function () {\n\t            // Process partial blocks\n\t            var finalProcessedBlocks = this._process(!!'flush');\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 1\n\t    });\n\n\t    /**\n\t     * Mode namespace.\n\t     */\n\t    var C_mode = C.mode = {};\n\n\t    /**\n\t     * Abstract base block cipher mode template.\n\t     */\n\t    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n\t        /**\n\t         * Creates this mode for encryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t         */\n\t        createEncryptor: function (cipher, iv) {\n\t            return this.Encryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Creates this mode for decryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t         */\n\t        createDecryptor: function (cipher, iv) {\n\t            return this.Decryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created mode.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t         */\n\t        init: function (cipher, iv) {\n\t            this._cipher = cipher;\n\t            this._iv = iv;\n\t        }\n\t    });\n\n\t    /**\n\t     * Cipher Block Chaining mode.\n\t     */\n\t    var CBC = C_mode.CBC = (function () {\n\t        /**\n\t         * Abstract base CBC mode.\n\t         */\n\t        var CBC = BlockCipherMode.extend();\n\n\t        /**\n\t         * CBC encryptor.\n\t         */\n\t        CBC.Encryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // XOR and encrypt\n\t                xorBlock.call(this, words, offset, blockSize);\n\t                cipher.encryptBlock(words, offset);\n\n\t                // Remember this block to use with next block\n\t                this._prevBlock = words.slice(offset, offset + blockSize);\n\t            }\n\t        });\n\n\t        /**\n\t         * CBC decryptor.\n\t         */\n\t        CBC.Decryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // Remember this block to use with next block\n\t                var thisBlock = words.slice(offset, offset + blockSize);\n\n\t                // Decrypt and XOR\n\t                cipher.decryptBlock(words, offset);\n\t                xorBlock.call(this, words, offset, blockSize);\n\n\t                // This block becomes the previous block\n\t                this._prevBlock = thisBlock;\n\t            }\n\t        });\n\n\t        function xorBlock(words, offset, blockSize) {\n\t            var block;\n\n\t            // Shortcut\n\t            var iv = this._iv;\n\n\t            // Choose mixing block\n\t            if (iv) {\n\t                block = iv;\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            } else {\n\t                block = this._prevBlock;\n\t            }\n\n\t            // XOR blocks\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= block[i];\n\t            }\n\t        }\n\n\t        return CBC;\n\t    }());\n\n\t    /**\n\t     * Padding namespace.\n\t     */\n\t    var C_pad = C.pad = {};\n\n\t    /**\n\t     * PKCS #5/7 padding strategy.\n\t     */\n\t    var Pkcs7 = C_pad.Pkcs7 = {\n\t        /**\n\t         * Pads data using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to pad.\n\t         * @param {number} blockSize The multiple that the data should be padded to.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t         */\n\t        pad: function (data, blockSize) {\n\t            // Shortcut\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count padding bytes\n\t            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t            // Create padding word\n\t            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\n\t            // Create padding\n\t            var paddingWords = [];\n\t            for (var i = 0; i < nPaddingBytes; i += 4) {\n\t                paddingWords.push(paddingWord);\n\t            }\n\t            var padding = WordArray.create(paddingWords, nPaddingBytes);\n\n\t            // Add padding\n\t            data.concat(padding);\n\t        },\n\n\t        /**\n\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to unpad.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t         */\n\t        unpad: function (data) {\n\t            // Get number of padding bytes from last byte\n\t            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t            // Remove padding\n\t            data.sigBytes -= nPaddingBytes;\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract base block cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t     */\n\t    var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Mode} mode The block mode to use. Default: CBC\n\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t         */\n\t        cfg: Cipher.cfg.extend({\n\t            mode: CBC,\n\t            padding: Pkcs7\n\t        }),\n\n\t        reset: function () {\n\t            var modeCreator;\n\n\t            // Reset cipher\n\t            Cipher.reset.call(this);\n\n\t            // Shortcuts\n\t            var cfg = this.cfg;\n\t            var iv = cfg.iv;\n\t            var mode = cfg.mode;\n\n\t            // Reset block mode\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                modeCreator = mode.createEncryptor;\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                modeCreator = mode.createDecryptor;\n\t                // Keep at least one block in the buffer for unpadding\n\t                this._minBufferSize = 1;\n\t            }\n\n\t            if (this._mode && this._mode.__creator == modeCreator) {\n\t                this._mode.init(this, iv && iv.words);\n\t            } else {\n\t                this._mode = modeCreator.call(mode, this, iv && iv.words);\n\t                this._mode.__creator = modeCreator;\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (words, offset) {\n\t            this._mode.processBlock(words, offset);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var finalProcessedBlocks;\n\n\t            // Shortcut\n\t            var padding = this.cfg.padding;\n\n\t            // Finalize\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                // Pad data\n\t                padding.pad(this._data, this.blockSize);\n\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\n\t                // Unpad data\n\t                padding.unpad(finalProcessedBlocks);\n\t            }\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 128/32\n\t    });\n\n\t    /**\n\t     * A collection of cipher parameters.\n\t     *\n\t     * @property {WordArray} ciphertext The raw ciphertext.\n\t     * @property {WordArray} key The key to this ciphertext.\n\t     * @property {WordArray} iv The IV used in the ciphering operation.\n\t     * @property {WordArray} salt The salt used with a key derivation function.\n\t     * @property {Cipher} algorithm The cipher algorithm.\n\t     * @property {Mode} mode The block mode used in the ciphering operation.\n\t     * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t     * @property {number} blockSize The block size of the cipher.\n\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t     */\n\t    var CipherParams = C_lib.CipherParams = Base.extend({\n\t        /**\n\t         * Initializes a newly created cipher params object.\n\t         *\n\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t         *         ciphertext: ciphertextWordArray,\n\t         *         key: keyWordArray,\n\t         *         iv: ivWordArray,\n\t         *         salt: saltWordArray,\n\t         *         algorithm: CryptoJS.algo.AES,\n\t         *         mode: CryptoJS.mode.CBC,\n\t         *         padding: CryptoJS.pad.PKCS7,\n\t         *         blockSize: 4,\n\t         *         formatter: CryptoJS.format.OpenSSL\n\t         *     });\n\t         */\n\t        init: function (cipherParams) {\n\t            this.mixIn(cipherParams);\n\t        },\n\n\t        /**\n\t         * Converts this cipher params object to a string.\n\t         *\n\t         * @param {Format} formatter (Optional) The formatting strategy to use.\n\t         *\n\t         * @return {string} The stringified cipher params.\n\t         *\n\t         * @throws Error If neither the formatter nor the default formatter is set.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = cipherParams + '';\n\t         *     var string = cipherParams.toString();\n\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t         */\n\t        toString: function (formatter) {\n\t            return (formatter || this.formatter).stringify(this);\n\t        }\n\t    });\n\n\t    /**\n\t     * Format namespace.\n\t     */\n\t    var C_format = C.format = {};\n\n\t    /**\n\t     * OpenSSL formatting strategy.\n\t     */\n\t    var OpenSSLFormatter = C_format.OpenSSL = {\n\t        /**\n\t         * Converts a cipher params object to an OpenSSL-compatible string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The OpenSSL-compatible string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            var wordArray;\n\n\t            // Shortcuts\n\t            var ciphertext = cipherParams.ciphertext;\n\t            var salt = cipherParams.salt;\n\n\t            // Format\n\t            if (salt) {\n\t                wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n\t            } else {\n\t                wordArray = ciphertext;\n\t            }\n\n\t            return wordArray.toString(Base64);\n\t        },\n\n\t        /**\n\t         * Converts an OpenSSL-compatible string to a cipher params object.\n\t         *\n\t         * @param {string} openSSLStr The OpenSSL-compatible string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t         */\n\t        parse: function (openSSLStr) {\n\t            var salt;\n\n\t            // Parse base64\n\t            var ciphertext = Base64.parse(openSSLStr);\n\n\t            // Shortcut\n\t            var ciphertextWords = ciphertext.words;\n\n\t            // Test for salt\n\t            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n\t                // Extract salt\n\t                salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n\t                // Remove salt from ciphertext\n\t                ciphertextWords.splice(0, 4);\n\t                ciphertext.sigBytes -= 16;\n\t            }\n\n\t            return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t         */\n\t        cfg: Base.extend({\n\t            format: OpenSSLFormatter\n\t        }),\n\n\t        /**\n\t         * Encrypts a message.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Encrypt\n\t            var encryptor = cipher.createEncryptor(key, cfg);\n\t            var ciphertext = encryptor.finalize(message);\n\n\t            // Shortcut\n\t            var cipherCfg = encryptor.cfg;\n\n\t            // Create and return serializable cipher params\n\t            return CipherParams.create({\n\t                ciphertext: ciphertext,\n\t                key: key,\n\t                iv: cipherCfg.iv,\n\t                algorithm: cipher,\n\t                mode: cipherCfg.mode,\n\t                padding: cipherCfg.padding,\n\t                blockSize: cipher.blockSize,\n\t                formatter: cfg.format\n\t            });\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Decrypt\n\t            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\n\t            return plaintext;\n\t        },\n\n\t        /**\n\t         * Converts serialized ciphertext to CipherParams,\n\t         * else assumed CipherParams already and returns ciphertext unchanged.\n\t         *\n\t         * @param {CipherParams|string} ciphertext The ciphertext.\n\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t         *\n\t         * @return {CipherParams} The unserialized ciphertext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t         */\n\t        _parse: function (ciphertext, format) {\n\t            if (typeof ciphertext == 'string') {\n\t                return format.parse(ciphertext, this);\n\t            } else {\n\t                return ciphertext;\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Key derivation function namespace.\n\t     */\n\t    var C_kdf = C.kdf = {};\n\n\t    /**\n\t     * OpenSSL key derivation function.\n\t     */\n\t    var OpenSSLKdf = C_kdf.OpenSSL = {\n\t        /**\n\t         * Derives a key and IV from a password.\n\t         *\n\t         * @param {string} password The password to derive from.\n\t         * @param {number} keySize The size in words of the key to generate.\n\t         * @param {number} ivSize The size in words of the IV to generate.\n\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t         *\n\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t         */\n\t        execute: function (password, keySize, ivSize, salt) {\n\t            // Generate random salt\n\t            if (!salt) {\n\t                salt = WordArray.random(64/8);\n\t            }\n\n\t            // Derive key and IV\n\t            var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\n\t            // Separate key and IV\n\t            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n\t            key.sigBytes = keySize * 4;\n\n\t            // Return params\n\t            return CipherParams.create({ key: key, iv: iv, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A serializable cipher wrapper that derives the key from a password,\n\t     * and returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t         */\n\t        cfg: SerializableCipher.cfg.extend({\n\t            kdf: OpenSSLKdf\n\t        }),\n\n\t        /**\n\t         * Encrypts a message using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Encrypt\n\t            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\n\t            // Mix in derived params\n\t            ciphertext.mixIn(derivedParams);\n\n\t            return ciphertext;\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Decrypt\n\t            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\n\t            return plaintext;\n\t        }\n\t    });\n\t}());\n\n\n}));","import _Vue, {PluginObject} from 'vue';\r\nimport App from '../app';\r\n\r\nconst Everflow: PluginObject<EverflowPluginOptions> = {\r\n  install(Vue, options) {\r\n    Vue.prototype.$app = options.everflowApp;\r\n  }\r\n};\r\n\r\nexport class EverflowPluginOptions {\r\n    everflowApp: App;\r\n}\r\nexport default Everflow;","/**************************\r\n* Random useful functions *\r\n***************************/\r\n\r\nconst utils = {\r\n    online: navigator.onLine,\r\n    removeHtml(value: string): string\r\n    {\r\n        return value.replace(/<\\/?[^>]+(>|$)/g, '');\r\n    },\r\n    microTime() : number {\r\n        var unixtime_ms = (new Date).getTime();\r\n        var sec = Math.floor(unixtime_ms / 1000);\r\n        return sec;\r\n    },\r\n    tagTester(name) {\r\n        return function(obj) {\r\n            return toString.call(obj) === '[object ' + name + ']';\r\n         };\r\n    }\r\n};\r\n\r\nexport const isFunction = function(value){\r\n    return typeof value === 'function'\r\n}\r\n\r\n\r\nexport const endsWith = function(string, target, position = undefined){\r\n      const { length } = string\r\n  position = position === undefined ? length : +position\r\n  if (position < 0 || position != position) {\r\n    position = 0\r\n  }\r\n  else if (position > length) {\r\n    position = length\r\n  }\r\n  const end = position\r\n  position -= target.length\r\n  return position >= 0 && string.slice(position, end) == target\r\n}\r\n\r\n\r\nexport const startsWith = function (string, target, position = null) {\r\n  const { length } = string\r\n  position = position == null ? 0 : position\r\n  if (position < 0) {\r\n    position = 0\r\n  }\r\n  else if (position > length) {\r\n    position = length\r\n  }\r\n  target = `${target}`\r\n  return string.slice(position, position + target.length) == target\r\n}\r\nexport default utils;\r\n","import * as storage from 'localforage';\r\nimport { isFunction } from './utils';\r\n\r\n/**\r\n * Creates an Everflow Storage object. Adds the ability to load objects and save objects in localstorage(ASYNC)\r\n * @class\r\n */\r\nexport default class Storage\r\n{\r\n    /**\r\n     * Initializes Sotage with a storage config object\r\n     * @constructor\r\n     * @param {object} config - everflow storage config\r\n     */\r\n    constructor(config: object)\r\n    {\r\n        var defaultEverflowStorageConfig = {\r\n            driver:  [storage.INDEXEDDB, storage.WEBSQL, storage.LOCALSTORAGE],\r\n            name: 'everflow-db',\r\n            storeName: 'default',\r\n            size: 4980736\r\n        }\r\n        var newConfig = {...defaultEverflowStorageConfig, ...config};\r\n        storage.config(newConfig);\r\n    }\r\n\r\n    /**\r\n     * Set a local storage object with a value\r\n     * @function set\r\n     * @param {string} key - local storage index-key\r\n     * @param {any} value - value to save\r\n     */\r\n    set(key: string, value: any, onSuccess: CallableFunction|null, onFail:CallableFunction|null): void \r\n    {\r\n        storage.setItem(key, value).then(function (value) {\r\n            if (isFunction(onSuccess)) {\r\n                onSuccess(value);\r\n            }}).catch(function (err) {\r\n            if (isFunction(onFail)){\r\n                onFail(err);\r\n            }});\r\n    }\r\n\r\n    /**\r\n     * Get a local storage object with key\r\n     * @function get\r\n     * @param {string} key - local storage index-key\r\n     * @param {callable} callback - callback for when data is loaded\r\n     */\r\n    get(key: string, callback): void\r\n    {\r\n        storage.getItem(key, callback)\r\n    }\r\n\r\n    /**\r\n     * Get a local storage object with key\r\n     * @function remove\r\n     * @param {string} key - local storage index-key\r\n     * @param {callable} callback - callback for when data is removed\r\n     */\r\n    remove(key: string, callback = null): void\r\n    {\r\n        if (callback)\r\n        {\r\n            storage.removeItem(key, callback);\r\n            return;\r\n        }\r\n        storage.removeItem(key);\r\n    }\r\n}","export default class ConfigRouterModeError extends Error\r\n{\r\n    constructor()\r\n    {\r\n        super('App.config.routerMode missing. Must be \"hash\", \"history\" or \"abstract\"')\r\n    }\r\n}\r\n\r\n","export default class ConfigMountError extends Error\r\n{\r\n    constructor()\r\n    {\r\n        super('Cannot find mountId in config file')\r\n    }\r\n}\r\n","export default class RoutesEmptyError extends Error\r\n{\r\n    constructor()\r\n    {\r\n        super('Routes passed to App.run([]) cannot be blank')\r\n    }\r\n}\r\n","export default class RequestEndPointFormatError extends Error\r\n{\r\n    constructor()\r\n    {\r\n        super('Request endpoint error. Make sure a / is on all routes.')\r\n    }\r\n}\r\n","export default class RequestBaseurlFormatError extends Error\r\n{\r\n    constructor()\r\n    {\r\n        super('Request apiURL in evconfig.json format error. Make sure the apiURL in the config does not end with a /')\r\n    }\r\n}\r\n","export default class RequestPrefixFormatError extends Error\r\n{\r\n    constructor()\r\n    {\r\n        super('Request prefix error. Make sure prefix starts with a / and does NOT end with a /')\r\n    }\r\n}\r\n","export default class ConfigSecurityKeyError extends Error\r\n{\r\n    constructor()\r\n    {\r\n        super('App.config.security is missing. Please add {\"security\": {\"key\": \"<aes-key-string-format>\"}} to your evconfig.json')\r\n    }\r\n}\r\n","export default class ConfigSecurityKeyError extends Error\r\n{\r\n    constructor()\r\n    {\r\n        super('App.config.security.key is missing. Please add \"key\": \"<aes-key-string-format>\" under security in the evconfig.json.')\r\n    }\r\n}\r\n","import ConfigRouterModeError from './config-router-mode-error';\r\nimport ConfigMountError from './config-mount-error';\r\nimport RoutesEmptyError from './routes-empty-error';\r\nimport RequestEndPointFormatError from './request-endpoint-format-error';\r\nimport RequestBaseurlFormatError from './request-baseurl-format-error';\r\nimport RequestPrefixFormatError from './request-prefix-format-error';\r\nimport ConfigSecurityError from './config-security-error';\r\nimport ConfigSecurityKeyError from './config-security-key-error';\r\n\r\nexport default\r\n{\r\n    ConfigSecurityError,\r\n    ConfigSecurityKeyError,\r\n    ConfigRouterModeError,\r\n    ConfigMountError,\r\n    RoutesEmptyError,\r\n    RequestEndPointFormatError,\r\n    RequestBaseurlFormatError,\r\n    RequestPrefixFormatError\r\n}","import Axios, { AxiosInstance, AxiosPromise, AxiosResponse, Method, ResponseType } from 'axios';\r\nimport { startsWith, endsWith } from './utils/utils';\r\nimport errors from './errors';\r\nimport App from './app';\r\n\r\n/**\r\n * Creates an Everflow Request object. Intergrates Axios into the Everflow framework.\r\n * @class\r\n */\r\n export default class Request\r\n {\r\n     everflowApp: App;\r\n     everflowAPIURL: string;\r\n     bearerToken: string = '';\r\n     endPoint:string = '';\r\n     authorize: boolean = false;\r\n     method: Method;\r\n     data: any = null;\r\n     responseType: ResponseType = 'json';\r\n     headers: object = {};\r\n     retries: number = 0;\r\n     maxTime: number = 8000;\r\n     disableAllButtons = false;\r\n\r\n    /**\r\n     * Initializes the Request\r\n     * @constructor\r\n     * @param {string} url - request url\r\n     * @param {boolean} authorize - if true add JWT to request \r\n     */\r\n     constructor(baseURL: string, url: string = '', authorize: boolean = false)\r\n     {\r\n         this.everflowAPIURL = baseURL;\r\n         this.endPoint = url;\r\n         this.authorize = authorize;\r\n     }\r\n\r\n    /**\r\n     * Perform multiple requests and end at the same time.\r\n     * @function multiple\r\n     * @param {Array<AxiosPromise>} requests - multiple Requests to handle\r\n     * @static\r\n     */\r\n     static multiple(requests: Array<AxiosPromise>): Promise<AxiosResponse<any>[]>\r\n     {\r\n         return Axios.all(requests)\r\n     }\r\n\r\n    /**\r\n     * Axios spread function to handle mutiple response callbacks\r\n     * @function spread\r\n     * @param {object} callback - callback with a paramter for each response in Request.multiple([])\r\n     * @static\r\n     */\r\n     static spread(callback: (...args: {}[]) => {}): (array: {}[]) => {}\r\n     {\r\n         return Axios.spread(callback)\r\n     }\r\n\r\n    /**\r\n     * Get Axios default engine\r\n     * @function getAxiosEngine\r\n     * @static\r\n     */\r\n     static getAxiosEngine(): AxiosInstance\r\n     {\r\n         return Axios\r\n     }\r\n\r\n    /**\r\n     * If true with adds a Bearer token to your request. token('<bearer-token>')\r\n     * @function auth\r\n     * @param {boolean} auth - URL for request\r\n     */\r\n     auth(auth: boolean): Request\r\n     {\r\n         this.authorize = auth;\r\n         return this;\r\n     }\r\n\r\n    /**\r\n     * Add a Bearer Token to your requests\r\n     * @function token\r\n     * @param {string} bearerToken - A JWT/Bearer Token for authorization. this.auth(true) plus token = authorized request! \r\n     */\r\n     token(bearerToken: string): Request\r\n     {\r\n         this.bearerToken = bearerToken;\r\n         return this;\r\n     }\r\n\r\n    /**\r\n     * End point URL for this request.\r\n     * @function url\r\n     * @param {string} url - URL for request\r\n     */\r\n     url(url: string): Request\r\n     {\r\n         this.endPoint = url;\r\n         return this;\r\n     }\r\n\r\n    /**\r\n     * Add header to Request\r\n     * @function addHeader\r\n     * @param {string} name - name of header\r\n     * @param {string} value - value of header\r\n     */\r\n     addHeader(name: string, value: string): Request\r\n     {\r\n         this.headers[name] = value\r\n         return this;\r\n     }\r\n\r\n    /**\r\n     * Retry the Request on failure(HTTP 500)\r\n     * @function retry\r\n     * @param {string} retries - default 3\r\n     */\r\n     retry(retries: number = 3): Request\r\n     {\r\n         this.retries = retries;\r\n         return this;\r\n     }\r\n\r\n     /**\r\n     * Disable all buttons on page while in-progress\r\n     * @function disableAll\r\n     */\r\n     disableAll()\r\n     {\r\n         this.disableAllButtons = true;\r\n         return this;\r\n     }\r\n\r\n    /**\r\n     * Timeout in miliseconds before the Request is terminated\r\n     * @function timeout\r\n     * @param {string} miliseconds - default 8000 = 8s\r\n     */\r\n     timeout(miliseconds: number = 8000): Request\r\n     {\r\n         this.maxTime = miliseconds;\r\n         return this;\r\n     }\r\n\r\n    /**\r\n     * Set Request to HTTP method of GET and execute\r\n     * @function get\r\n     */\r\n     get(): AxiosPromise\r\n     {\r\n         this.method = 'GET';\r\n         return this.build();\r\n     }\r\n\r\n    /**\r\n     * Set Request to HTTP method of DELETE and execute\r\n     * @function delete\r\n     */\r\n     delete(data?: any): AxiosPromise\r\n     {\r\n         this.method = 'DELETE';\r\n         if (data)\r\n         {\r\n             this.data = data;\r\n         }\r\n         return this.build();\r\n     }\r\n\r\n    /**\r\n     * Set Request to HTTP method of PUT and execute\r\n     * @function put\r\n     * @param {object} data - data to be sent to server\r\n     */\r\n     put(data: any): AxiosPromise\r\n     {\r\n         this.method = 'PUT';\r\n         this.data = data;\r\n         return this.build();\r\n     }\r\n\r\n    /**\r\n     * Set Request to HTTP method of POST and execute\r\n     * @function post\r\n     * @param {object} data - data to be sent to server\r\n     */\r\n     post(data: any): AxiosPromise\r\n     {\r\n         this.method = 'POST';\r\n         this.data = data;\r\n         return this.build();\r\n     }\r\n\r\n    /**\r\n     * Set Request to HTTP method of PATCH and execute\r\n     * @function patch\r\n     * @param {object} data - data to be sent to server\r\n     */\r\n     patch(data: any): AxiosPromise\r\n     {\r\n        //Display.loader.on();\r\n        this.method = 'PATCH';\r\n        this.data = data;\r\n        return this.build();\r\n    }\r\n\r\n    /**\r\n     * Build an Axios object with the specified options\r\n     * @function build\r\n     * @private\r\n     */\r\n     private build() : AxiosPromise\r\n     {\r\n         var url: string = '';\r\n         if (this.authorize)\r\n         {\r\n             this.addHeader('Authorization', `Bearer ${this.bearerToken}`)\r\n         }\r\n        //added to support external links\r\n        if (startsWith(this.endPoint.toLowerCase(), 'http'))\r\n        {\r\n            url = this.endPoint;\r\n        } else {\r\n            if (endsWith(this.everflowAPIURL, '/'))\r\n            {\r\n                throw new errors.RequestBaseurlFormatError();\r\n            }\r\n            if (!startsWith(this.endPoint, '/'))\r\n            {\r\n                throw new errors.RequestEndPointFormatError();\r\n            }\r\n            url = this.everflowAPIURL + this.endPoint;\r\n        }\r\n        var config = {\r\n            url: url,\r\n            method: this.method,\r\n            headers: this.headers,\r\n            responseType: this.responseType,\r\n            timeout: this.maxTime,\r\n            data: JSON.stringify(this.data)\r\n        };\r\n        var ax = Axios.create(config);\r\n        let self= this;\r\n        var iRetryFunction = function (error)\r\n        {\r\n            var errorCode = !error.response? error.request.status : error.response.status;\r\n            config['retries'] = config['retries'] - 1;\r\n            if (errorCode === 500 && config['retries'] > 0)\r\n            {\r\n                return ax.request(config);\r\n            }\r\n            return Promise.reject(error);\r\n        }\r\n        ax.interceptors.response.use(undefined, iRetryFunction);\r\n        ax.interceptors.request.use(undefined, iRetryFunction);\r\n        if (this.disableAllButtons)\r\n        {\r\n            var disableAllButtonsFunction = function(disabled)\r\n            {\r\n                var buttons = document.querySelectorAll(\"input[type=button], button[type=submit], button[type=button], input[type=submit]\");\r\n                for(var i = 0, len = buttons.length; i < len; i++)\r\n                {\r\n                    buttons[i]['disabled'] = disabled;\r\n                }\r\n            }\r\n            ax.interceptors.request.use(function (config) {\r\n                disableAllButtonsFunction(true);\r\n                return config;\r\n            }, function (error) {\r\n                disableAllButtonsFunction(false);\r\n                return Promise.reject(error);\r\n            });\r\n            ax.interceptors.response.use(function (response) {\r\n                disableAllButtonsFunction(false);\r\n                return response;\r\n            }, function (error) {\r\n                disableAllButtonsFunction(false);\r\n                return Promise.reject(error);\r\n            });\r\n        }\r\n        // add retires to config\r\n        config['retries'] = self.retries;\r\n        return ax.request(config);\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport VueI18n from 'vue-i18n';\r\nimport App from './app';\r\n\r\nexport default class Language\r\n{\r\n\r\n    static loadedLanguages: Array<string> = ['en'];\r\n    i18n: VueI18n;\r\n\r\n    constructor(app: App, messages: any)\r\n    {\r\n        let defaultLocale = app.config.i18n.defaultLocale;\r\n        let fallbackLocale = app.config.i18n.fallbackLocale;\r\n        if (defaultLocale)\r\n        {\r\n            if (defaultLocale === 'user')\r\n            {\r\n                defaultLocale = navigator.language.split('-')[0];\r\n            }\r\n        }\r\n        this.i18n = new VueI18n({\r\n            locale: defaultLocale, // set locale\r\n            fallbackLocale: fallbackLocale,\r\n            messages // set locale messages\r\n        });\r\n    }\r\n\r\n    locale = (i18nName: string) =>\r\n    {\r\n        return Language.loadLanguageAsync(this.i18n, i18nName);\r\n    }\r\n\r\n    // locale (i18nName: string) : Language\r\n    // {\r\n    //     return Language.loadLanguageAsync(this.i18n, i18nName)\r\n    // }\r\n\r\n    private static setLocale (i18n: VueI18n, lang: string)\r\n    {\r\n        i18n.locale = lang\r\n        axios.defaults.headers.common['Accept-Language'] = lang\r\n        if (document.querySelector('html'))\r\n        {\r\n            const htmlLang = document.querySelector('html') as HTMLHtmlElement;\r\n            htmlLang.setAttribute('lang', lang)\r\n        }\r\n        return;\r\n    }\r\n\r\n    private static async loadLanguageAsync(i18n: VueI18n, lang = \"en\"): Promise<any>\r\n    {\r\n          if (i18n.locale === lang)\r\n          {\r\n              // Do nothing, language is used and loaded\r\n              return Promise.resolve();\r\n          }\r\n          if (Language.loadedLanguages.includes(lang))\r\n          {\r\n              // Do nothing, language is loaded\r\n              // Promise.resolve(Vuei18n.setLocale(i18n, lang))\r\n              Language.setLocale(i18n, lang);\r\n              return Promise.resolve();\r\n          }\r\n          // load un-loaded language.\r\n\r\n          return await axios.get(`/i18n/${lang}.json`).then(function(response){\r\n            i18n.setLocaleMessage(lang, response.data[lang])\r\n            Language.loadedLanguages.push(lang)\r\n            return Language.setLocale(i18n, lang)\r\n          });\r\n    }\r\n}","import Vue from 'vue';\r\nimport Vuex, { Store } from 'vuex';\r\nimport VueI18n from 'vue-i18n';\r\nimport VueRouter, { RouterOptions, RouteConfig, RouterMode } from 'vue-router';\r\nimport { IApp, IAppOptions } from './interfaces';\r\nimport Storage from './utils/storage';\r\nimport Request from './request';\r\nimport Language from './language';\r\nimport errors from './errors';\r\nimport Everflow from './plugin/everflow-plugin';\r\n\r\ndeclare module 'vue/types/vue' {\r\n    interface Vue {\r\n        $app: App\r\n    }\r\n}\r\n\r\n/**\r\n * Creates an Everflow App object. The primary application object.\r\n * @class\r\n */\r\n export default class App implements IApp\r\n {\r\n     request: Request;\r\n     storage: Storage;\r\n     ready: boolean = false;\r\n     readyPermission: boolean = false;\r\n     readyCallbacks: Array<CallableFunction> = [];\r\n     config: any;\r\n     language: Language;\r\n     $globals: any = {};\r\n     requestErrorHandlers: any = {};\r\n     $router: VueRouter;\r\n\r\n\r\n    /**\r\n     * Initializes App\r\n     * @constructor\r\n     * @param {interfaces.IModel} User - a user model object \r\n     * @param {object} config - everflow config\r\n     */\r\n     constructor(config: any, appOptions: IAppOptions)\r\n     {\r\n         if (!appOptions.routerOptions)\r\n         {\r\n             // default to object\r\n             appOptions.routerOptions = {};\r\n         }\r\n         if (!appOptions.vuePlugins)\r\n         {\r\n             // default to array\r\n             appOptions.vuePlugins = [];\r\n         }\r\n         this.config = config;\r\n         this.storage = new Storage(config.storage);\r\n         this.__routerInit(appOptions.routes, appOptions.routerOptions);\r\n         Vue.use(Vuex);\r\n         if (appOptions.defaultI18nMessages)\r\n         {\r\n             Vue.use(VueI18n);\r\n             this.language = new Language(this, appOptions.defaultI18nMessages);\r\n         }\r\n         if(appOptions.vuePlugins)\r\n         {\r\n             appOptions.vuePlugins.forEach(function(plugin, index, arr){\r\n                 Vue.use(plugin);\r\n             });\r\n         }\r\n     }\r\n\r\n\r\n     /**\r\n     * Vue Router init helper function\r\n     * @function __routerInit\r\n     * @param {Array<RouteConfig>} routes - An array of routes for Vue Router\r\n     * @param {RouterOptions} routerOptions - Vue Router options object\r\n     * @private\r\n     */\r\n     private __routerInit(routes: Array<RouteConfig>, routerOptions?: RouterOptions)\r\n     {\r\n         Vue.use(VueRouter);\r\n         if (!routerOptions)\r\n         {\r\n             routerOptions = {};\r\n         }\r\n         var routerMode: RouterMode = null;\r\n         if (!this.config.routerMode)\r\n         {\r\n             throw new errors.ConfigRouterModeError();\r\n         }\r\n         routerMode = this.config.routerMode;\r\n         if (!routes)\r\n         {\r\n             throw new errors.RoutesEmptyError();\r\n         }\r\n         const everflowDefaultRouterOptions: RouterOptions = {\r\n             mode: routerMode,\r\n             routes: routes\r\n         };\r\n         // Merge router options from defaults and user inputted\r\n         const routerOptionsMerged = {...everflowDefaultRouterOptions, ...routerOptions};\r\n         this.$router = new VueRouter(routerOptionsMerged);\r\n     }\r\n\r\n    /**\r\n     * Load user defined callbacks on app load\r\n     * @function loadReadyCallbacks\r\n     * @private\r\n     */\r\n     private loadReadyCallbacks(): void\r\n     {\r\n         for (let callback of this.readyCallbacks)\r\n         {\r\n             // if (!isFunction(callback))\r\n             // {\r\n             //     if (isFunction(callback.function))\r\n             //     {\r\n             //         callback.function();\r\n             //     }\r\n             // } else {\r\n             //     callback();\r\n             // }\r\n             callback(this);\r\n         }\r\n         this.ready = true;\r\n    }\r\n\r\n    /**\r\n     * Start the EverFlow application\r\n     * @function run\r\n     * @param {Array<RouteConfig>} routes - array of routes to be served by the app\r\n     * @param {Object} injects - use name: plugin syntax\r\n     */\r\n     run(store: Store<any>, injects: any = {}): void\r\n     {\r\n         // init Request object\r\n         this.request = new Request(this.config.apiURL);\r\n         Vue.use(Everflow, { everflowApp: this });\r\n         var mountId: string = null;\r\n         if (!this.config.mountId)\r\n         {\r\n             throw new errors.ConfigMountError();\r\n         }\r\n         mountId = this.config.mountId;\r\n\r\n         // Merge everflow vue options with injects (options for vue)\r\n         const vueOptions = {\r\n             router: this.$router,\r\n             store: store\r\n         };\r\n\r\n         // Setup vue-i18n\r\n         if (this.language)\r\n         {\r\n             vueOptions['i18n'] = this.language.i18n;\r\n         }\r\n         Object.assign({}, vueOptions, injects);\r\n\r\n         const vueOptionsMerged = {...vueOptions, ...injects};\r\n\r\n         // Create new vue object\r\n         new Vue(vueOptionsMerged).$mount('#'+mountId);\r\n\r\n         // Load user custom callbacks for when the app starts\r\n         this.loadReadyCallbacks();\r\n     }\r\n\r\n    /**\r\n     * $router.push, goes to page name\r\n     * @function go\r\n     * @param {string} name - name of route to navigate to\r\n     * @param {object} data - params to send to the new route\r\n     */\r\n     go(name: string, data: any = {})\r\n     {\r\n         this.$router.push({ name: name, params: data});\r\n     }\r\n\r\n    /**\r\n     * Add callbacks to trigger once app is loaded (models are loaded)\r\n     * @function readyCallback\r\n     * @param {CallableFunction} callback - a callback to trigger on app ready\r\n     */\r\n     readyCallback(callback: CallableFunction)\r\n     {\r\n         this.readyCallbacks.push(callback);\r\n     }\r\n }","import { Emit } from 'vue-property-decorator'\nexport default Emit as any;","import { Inject } from 'vue-property-decorator'\r\nexport default Inject as any;","import { Model } from 'vue-property-decorator'\r\nexport default Model as any;","import { Prop } from 'vue-property-decorator'\r\nexport default Prop as any;","import { Provide } from 'vue-property-decorator'\r\nexport default Provide as any;","import { Watch } from 'vue-property-decorator'\r\nexport default Watch as any;","import Component from 'vue-class-component'\r\nimport Emit from './emit';\r\nimport Inject from './inject';\r\nimport Model from './model';\r\nimport Prop from './prop';\r\nimport Provide from './provide';\r\nimport Watch from './watch';\r\n\r\nexport default\r\n{\r\n    Component,\r\n    Emit,\r\n    Inject,\r\n    Model,\r\n    Prop,\r\n    Provide,\r\n    Watch\r\n}","import { isFunction } from './utils/utils';\nimport Vue, { VueConstructor } from 'vue';\nimport decorators from './decorators'\n\n/**\n * Static functions for testing page permissions and firing the ready page function\n * @class\n */\nclass PageHelper\n{\n    /**\n     * Check if exists then Fire Page.ready()\n     * @function pageReady\n     * @param {Page} page - Page class\n     * @static\n     */\n    static pageReady(page: Page)\n    {\n        if (isFunction(page.ready))\n        {\n            page.ready();\n        }\n    }\n}\n\n/**\n * Creates the Page class to extend Vue. Adds routeName, pageName, permissions and everflowPageLoadChange() \n * @class\n */\n@decorators.Component({})\nclass Page extends Vue\n{\n    ready()\n    {\n\n    }\n}\n\n/**\n * Adds support for permisisons and triggering ready function\n * @mixin\n * @mixes Vue\n */\nvar mixIns: object = {\n    $refs: '',\n    created() \n    {\n        document.getElementById(this.$app.config.mountId).className += ` ${this.pageName}-everflow-page`;\n    },\n    mounted()\n    {\n        this.$app.readyPermission = true;\n        PageHelper.pageReady(this);\n        // document.title = this.pageName;\n    }\n}\nexport default Page.extend({ mixins: [mixIns] }) as VueConstructor;\n","import { isFunction } from './utils/utils';\r\nimport Vue, { VueConstructor } from 'vue';\r\nimport decorators from './decorators'\r\n\r\n/**\r\n * Creates the Ready class to extend Vue. Adds ready() triggering\r\n * @class\r\n */\r\n@decorators.Component({})\r\nclass Ready extends Vue\r\n{\r\n    ready()\r\n    {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Adds support triggering ready function without permissions\r\n * @mixin\r\n * @mixes Vue\r\n */\r\nvar mixIns: object = {\r\n    $refs: '',\r\n    mounted: function () {\r\n        if (isFunction(this.ready))\r\n        {\r\n            this.ready();\r\n        }\r\n        return;\r\n    }\r\n}\r\nexport default Ready.extend({ mixins: [mixIns] }) as VueConstructor;\r\n","import App from './app';\r\nimport CryptoJsSHA256 from 'crypto-js/sha256';\r\nimport Base64 from \"crypto-js/enc-base64\";\r\nimport Utf8 from \"crypto-js/enc-utf8\";\r\nimport CryptoJsMD5 from 'crypto-js/md5';\r\nimport CryptoJsAES from 'crypto-js/aes';\r\nimport errors from './errors';\r\n\r\n/**\r\n * Creates an Everflow Security object. Intergrates crypto-js into the Everflow framework.\r\n * @class\r\n */\r\nexport default class Security\r\n{\r\n    key: string;\r\n\r\n    constructor(everflowApp: App)\r\n    {\r\n        if (!everflowApp.config.security)\r\n        {\r\n            throw new errors.ConfigSecurityError();\r\n        }\r\n        if (!everflowApp.config.security.key)\r\n        {\r\n            throw new errors.ConfigSecurityKeyError();\r\n        }\r\n        this.key = everflowApp.config.security.key;\r\n    }\r\n\r\n    encrypt(text: string)\r\n    {\r\n        return Security.simple.aes.encrypt(text, this.key);\r\n    }\r\n\r\n    decrypt(encryptedText: string)\r\n    {\r\n        return Security.simple.aes.decrypt(encryptedText, this.key);\r\n    }\r\n\r\n    // Static Props...\r\n\r\n    static hashes = {\r\n        sha256: CryptoJsSHA256,\r\n        md5: CryptoJsMD5\r\n    }\r\n    static encoders = {\r\n        base64: Base64,\r\n        utf8: Utf8\r\n    }\r\n    static decoders = {\r\n        base64: Base64,\r\n        utf8: Utf8\r\n    }\r\n    static AES = CryptoJsAES;\r\n    static simple = {\r\n        base64: {\r\n            encode(text: string): string {\r\n                return Security.encoders.base64.stringify(Security.encoders.utf8.parse(text));\r\n            },\r\n            decode(base64Text: string): string {\r\n                return Security.encoders.base64.parse(base64Text).toString(Security.encoders.utf8);\r\n            }\r\n        },\r\n        aes: {\r\n            encrypt(text: string, key: string): string|boolean {\r\n                try {\r\n                    return encodeURIComponent(Security.simple.base64.encode(Security.AES.encrypt(text, key).toString()));\r\n                } catch(error)\r\n                {\r\n                    return false;\r\n                }\r\n            },\r\n            decrypt(text: string, key: string): string|boolean {\r\n                try{\r\n                    return Security.AES.decrypt(Security.simple.base64.decode(decodeURIComponent(text)), key).toString(Security.encoders.utf8);\r\n                } catch(error)\r\n                {\r\n                    return false;\r\n                }\r\n            },\r\n        }\r\n    }\r\n}\r\n","import moment from 'moment';\r\nimport App from '../app';\r\n\r\n/**\r\n * Adds the ability to convert dates and times using config options.\r\n * @class\r\n */\r\nexport default class DateTime\r\n{\r\n    /**\r\n     * Returns the format string for date from app.config or defaults to YYYY-MM-DD\r\n     * @function getDateFormat\r\n     * @private\r\n     * @static\r\n     */\r\n    private static getDateFormat(everflowApp: App = null): string\r\n    {\r\n        var dateFormat = null;\r\n        try {\r\n            dateFormat = everflowApp.config.datetime.date.format;\r\n        } catch (e){\r\n            dateFormat = 'YYYY-MM-DD';\r\n        }\r\n        return dateFormat;\r\n    }\r\n\r\n    /**\r\n     * Returns the format string for time from app.config or defaults to LTS\r\n     * @function getTimeFormat\r\n     * @private\r\n     * @static\r\n     */\r\n    private static getTimeFormat(everflowApp: App = null): string\r\n    {\r\n        var timeFormat = null;\r\n        try {\r\n            timeFormat = everflowApp.config.datetime.time.format;\r\n        } catch (e){\r\n            timeFormat = 'LTS';\r\n        }\r\n        return timeFormat;\r\n    }\r\n\r\n    /**\r\n     * Returns the format string for time from app.config or defaults to LTS\r\n     * @function moment\r\n     * @param {moment.MomentInput} dateTime - date and time value\r\n     * @param {string} format - date and time format string, if empty values are generated using default or config options\r\n     * @static\r\n     */\r\n    static moment(dateTime: moment.MomentInput = null, format: string = null): moment.Moment\r\n    {\r\n        if (!format)\r\n        {\r\n            format = `${DateTime.getDateFormat()} ${DateTime.getTimeFormat()}`;\r\n        }\r\n        if (!dateTime)\r\n        {\r\n            dateTime = new Date();\r\n        }\r\n        if (!format)\r\n        {\r\n            format = 'MMMM Do YYYY, h:mm:ss a';\r\n        }\r\n        return moment(dateTime, format);\r\n    }\r\n\r\n    /**\r\n     * Return only date of date and time value \r\n     * @function date\r\n     * @param {moment.MomentInput} dateTime - date and time value\r\n     * @static\r\n     */\r\n    static date(dateTime: moment.MomentInput = null): string\r\n    {\r\n        return DateTime.moment(dateTime).format(DateTime.getDateFormat());\r\n    }\r\n\r\n    /**\r\n     * Return only time of date and time value \r\n     * @function time\r\n     * @param {moment.MomentInput} dateTime - date and time value\r\n     * @static\r\n     */\r\n    static time(dateTime: moment.MomentInput = null): string\r\n    {\r\n        return DateTime.moment(dateTime).format(DateTime.getTimeFormat());\r\n    }\r\n\r\n}","import Utils from './utils';\r\nimport Storage from './storage';\r\nimport DateTime from './date-time';\r\n\r\nexport default\r\n{\r\n    Utils,\r\n    Storage,\r\n    DateTime\r\n}","import Storage from '../utils/storage';\r\n\r\n/**\r\n * The primary Model - Future up to vuex states...\r\n * @class\r\n */\r\nexport default class Model\r\n{\r\n    saveName: string = 'defaultModel';\r\n    __storage: Storage = null;\r\n\r\n    constructor(storage: Storage){\r\n        this.__storage = storage;\r\n    }\r\n\r\n    map(object: object)\r\n    {\r\n        var model = this;\r\n        Object.keys(object).map(function (key, index) {\r\n            if (key in model)\r\n            {\r\n                model[key] = object[key];\r\n            }\r\n        });\r\n    }\r\n\r\n    save(onSuccess: CallableFunction|null = null, onFail: CallableFunction|null = null, storage: Storage = this.__storage)\r\n    {\r\n        storage.set(this.saveName, this, onSuccess, onFail);\r\n    }\r\n\r\n    load(callback: any, storage: Storage = this.__storage)\r\n    {\r\n        var self = this;\r\n        storage.get(this.saveName, function (error, value) {\r\n            // map loaded values right into object\r\n            if (value)\r\n            {\r\n                self.map(value);\r\n            }\r\n            // if callback, call it\r\n            if (callback)\r\n            {\r\n                new callback(self, value);\r\n            }\r\n        });\r\n    }\r\n\r\n    delete(callback: any = null, storage: Storage = this.__storage)\r\n    {\r\n        storage.remove(this.saveName, function () {\r\n            if (callback)\r\n            {\r\n                new callback();\r\n            }\r\n        });\r\n    }\r\n}\r\n","import Model from './model'\r\nimport UserModel from './user-model'\r\n\r\nexport default\r\n{\r\n    Model,\r\n    UserModel\r\n}","import Model from './model';\r\n\r\n/**\r\n * Model for an Everflow user\r\n * @class\r\n */\r\nexport default class UserModel extends Model\r\n{\r\n    saveName: string    = 'user';\r\n    token: string       = null;\r\n    firstname: string   = '';\r\n    lastname: string    = '';\r\n    email: string       = '';\r\n}\r\n","import documentTitleNavGaurd from './document-title.navguard';\r\n\r\nexport default {\r\n    documentTitleNavGaurd: documentTitleNavGaurd,\r\n};","import { Route } from 'vue-router';\r\n\r\nexport default (to: Route, from: Route, next: CallableFunction) => {\r\n    // Add to beforeEach, document title updates on navigation\r\n    document.title = to.meta.title;\r\n    next();\r\n};\r\n\r\n","import Everflow, { EverflowPluginOptions } from './everflow/plugin/everflow-plugin';\r\nimport VueRouter from 'vue-router';\r\nimport App from './everflow/app';\r\nimport Page from './everflow/page';\r\nimport Ready from './everflow/ready';\r\nimport Request from './everflow/request';\r\nimport Language from './everflow/language';\r\nimport Security from './everflow/security';\r\nimport utils from './everflow/utils';\r\nimport models from './everflow/models';\r\nimport decorators from './everflow/decorators';\r\nimport * as interfaces from './everflow/interfaces';\r\nimport navigationGuards from './everflow/navigation-guards';\r\n\r\nexport\r\n{\r\n    navigationGuards,\r\n    EverflowPluginOptions,\r\n    VueRouter,\r\n    App,\r\n    Page,\r\n    Ready,\r\n    Request,\r\n    utils,\r\n    models,\r\n    decorators,\r\n    interfaces,\r\n    Language,\r\n    Security\r\n}\r\nexport default Everflow;\r\n"],"sourceRoot":""}